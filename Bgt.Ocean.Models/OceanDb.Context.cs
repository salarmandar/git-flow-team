//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Bgt.Ocean.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class OceanDbEntities : DbContext
    {
        public OceanDbEntities()
            : base("name=OceanDbEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<TblChargeCategory> TblChargeCategory { get; set; }
        public virtual DbSet<TblChargeCategory_Action> TblChargeCategory_Action { get; set; }
        public virtual DbSet<TblChargeCategory_Action_Charge_Condition> TblChargeCategory_Action_Charge_Condition { get; set; }
        public virtual DbSet<TblChargeCategory_Rule_Value> TblChargeCategory_Rule_Value { get; set; }
        public virtual DbSet<TblLeedToCashContract_PricingRules> TblLeedToCashContract_PricingRules { get; set; }
        public virtual DbSet<TblLeedToCashMasterCategoryClause> TblLeedToCashMasterCategoryClause { get; set; }
        public virtual DbSet<TblLeedToCashMasterClause> TblLeedToCashMasterClause { get; set; }
        public virtual DbSet<TblLeedToCashMasterClauseScope> TblLeedToCashMasterClauseScope { get; set; }
        public virtual DbSet<TblLeedToCashMasterClauseScopeDetail> TblLeedToCashMasterClauseScopeDetail { get; set; }
        public virtual DbSet<TblLeedToCashProduct> TblLeedToCashProduct { get; set; }
        public virtual DbSet<TblLeedToCashProduct_Clause> TblLeedToCashProduct_Clause { get; set; }
        public virtual DbSet<TblLeedToCashProduct_ProductAttribute> TblLeedToCashProduct_ProductAttribute { get; set; }
        public virtual DbSet<TblLeedToCashProduct_ProductAttribute_Certification> TblLeedToCashProduct_ProductAttribute_Certification { get; set; }
        public virtual DbSet<TblLeedToCashProduct_ProductAttribute_Discrepancy> TblLeedToCashProduct_ProductAttribute_Discrepancy { get; set; }
        public virtual DbSet<TblLeedToCashProduct_ProductAttribute_GeoLocation_City> TblLeedToCashProduct_ProductAttribute_GeoLocation_City { get; set; }
        public virtual DbSet<TblLeedToCashProduct_ProductAttribute_Limit_Items> TblLeedToCashProduct_ProductAttribute_Limit_Items { get; set; }
        public virtual DbSet<TblLeedToCashProduct_ProductAttribute_Limit_Values> TblLeedToCashProduct_ProductAttribute_Limit_Values { get; set; }
        public virtual DbSet<TblLeedToCashProduct_ProductAttribute_Limit_Weight> TblLeedToCashProduct_ProductAttribute_Limit_Weight { get; set; }
        public virtual DbSet<TblLeedToCashProduct_ProductAttribute_ResponseTime> TblLeedToCashProduct_ProductAttribute_ResponseTime { get; set; }
        public virtual DbSet<TblLeedToCashProduct_ProductAttribute_ServiceWindows> TblLeedToCashProduct_ProductAttribute_ServiceWindows { get; set; }
        public virtual DbSet<TblLeedToCashProduct_ProductAttribute_TimeDeadLine> TblLeedToCashProduct_ProductAttribute_TimeDeadLine { get; set; }
        public virtual DbSet<TblLeedToCashProduct_ProductAttribute_TimeSendReport> TblLeedToCashProduct_ProductAttribute_TimeSendReport { get; set; }
        public virtual DbSet<TblLeedToCashProduct_ProductAttribute_TimeSendReport_Detail> TblLeedToCashProduct_ProductAttribute_TimeSendReport_Detail { get; set; }
        public virtual DbSet<TblLeedToCashProduct_ServiceType> TblLeedToCashProduct_ServiceType { get; set; }
        public virtual DbSet<TblLeedToCashQuotation> TblLeedToCashQuotation { get; set; }
        public virtual DbSet<TblLeedToCashQuotation_Clause> TblLeedToCashQuotation_Clause { get; set; }
        public virtual DbSet<TblLeedToCashQuotation_Customer_Mapping> TblLeedToCashQuotation_Customer_Mapping { get; set; }
        public virtual DbSet<TblLeedToCashQuotation_Location_Mapping> TblLeedToCashQuotation_Location_Mapping { get; set; }
        public virtual DbSet<TblLeedToCashQuotation_PricingRule_Mapping> TblLeedToCashQuotation_PricingRule_Mapping { get; set; }
        public virtual DbSet<TblLeedToCashQuotation_Product> TblLeedToCashQuotation_Product { get; set; }
        public virtual DbSet<TblLeedToCashQuotation_ProductAttribute> TblLeedToCashQuotation_ProductAttribute { get; set; }
        public virtual DbSet<TblMasterActualJobActualCount> TblMasterActualJobActualCount { get; set; }
        public virtual DbSet<TblMasterActualJobCashAdd> TblMasterActualJobCashAdd { get; set; }
        public virtual DbSet<TblMasterActualJobCashReturn> TblMasterActualJobCashReturn { get; set; }
        public virtual DbSet<TblMasterActualJobHeader_Capability> TblMasterActualJobHeader_Capability { get; set; }
        public virtual DbSet<TblMasterActualJobHeader_OTC> TblMasterActualJobHeader_OTC { get; set; }
        public virtual DbSet<TblMasterActualJobItemsCommodity_ScanHistory> TblMasterActualJobItemsCommodity_ScanHistory { get; set; }
        public virtual DbSet<TblMasterActualJobItemsLiability> TblMasterActualJobItemsLiability { get; set; }
        public virtual DbSet<TblMasterActualJobItemsSeal_ScanHistory> TblMasterActualJobItemsSeal_ScanHistory { get; set; }
        public virtual DbSet<TblMasterActualJobMachineReport> TblMasterActualJobMachineReport { get; set; }
        public virtual DbSet<TblMasterActualJobServiceStop> TblMasterActualJobServiceStop { get; set; }
        public virtual DbSet<TblMasterActualJobServiceStopLegs> TblMasterActualJobServiceStopLegs { get; set; }
        public virtual DbSet<TblMasterActualJobServiceStopSpecialCommand> TblMasterActualJobServiceStopSpecialCommand { get; set; }
        public virtual DbSet<TblMasterActualJobSumActualCount> TblMasterActualJobSumActualCount { get; set; }
        public virtual DbSet<TblMasterActualJobSumCashReturn> TblMasterActualJobSumCashReturn { get; set; }
        public virtual DbSet<TblMasterActualJobSumMachineReport> TblMasterActualJobSumMachineReport { get; set; }
        public virtual DbSet<TblMasterCapturedCard> TblMasterCapturedCard { get; set; }
        public virtual DbSet<TblMasterCheckList> TblMasterCheckList { get; set; }
        public virtual DbSet<TblMasterCity> TblMasterCity { get; set; }
        public virtual DbSet<TblMasterCommodity> TblMasterCommodity { get; set; }
        public virtual DbSet<TblMasterCommodityCountry> TblMasterCommodityCountry { get; set; }
        public virtual DbSet<TblMasterCommodityGroup> TblMasterCommodityGroup { get; set; }
        public virtual DbSet<TblMasterCountry> TblMasterCountry { get; set; }
        public virtual DbSet<TblMasterCountry_State> TblMasterCountry_State { get; set; }
        public virtual DbSet<TblMasterCurrency> TblMasterCurrency { get; set; }
        public virtual DbSet<TblMasterCurrencyDependOnCountry> TblMasterCurrencyDependOnCountry { get; set; }
        public virtual DbSet<TblMasterCustomer> TblMasterCustomer { get; set; }
        public virtual DbSet<TblMasterCustomer_Account> TblMasterCustomer_Account { get; set; }
        public virtual DbSet<TblMasterCustomerContract> TblMasterCustomerContract { get; set; }
        public virtual DbSet<TblMasterCustomerContract_ServiceLocation> TblMasterCustomerContract_ServiceLocation { get; set; }
        public virtual DbSet<TblMasterCustomerLocation> TblMasterCustomerLocation { get; set; }
        public virtual DbSet<TblMasterCustomerLocation_BrinksSite> TblMasterCustomerLocation_BrinksSite { get; set; }
        public virtual DbSet<TblMasterCustomerLocation_InternalDepartment> TblMasterCustomerLocation_InternalDepartment { get; set; }
        public virtual DbSet<TblMasterCustomerLocation_LocationDestination> TblMasterCustomerLocation_LocationDestination { get; set; }
        public virtual DbSet<TblMasterCustomerLocation_ServiceHour> TblMasterCustomerLocation_ServiceHour { get; set; }
        public virtual DbSet<TblMasterDailyEmployee> TblMasterDailyEmployee { get; set; }
        public virtual DbSet<TblMasterDailyRunResource> TblMasterDailyRunResource { get; set; }
        public virtual DbSet<TblMasterDenomination> TblMasterDenomination { get; set; }
        public virtual DbSet<TblMasterDistrict> TblMasterDistrict { get; set; }
        public virtual DbSet<TblMasterEmployee> TblMasterEmployee { get; set; }
        public virtual DbSet<TblMasterGroup> TblMasterGroup { get; set; }
        public virtual DbSet<TblMasterGroup_Menu> TblMasterGroup_Menu { get; set; }
        public virtual DbSet<TblMasterGroup_MenuCommand> TblMasterGroup_MenuCommand { get; set; }
        public virtual DbSet<TblMasterGroup_Site> TblMasterGroup_Site { get; set; }
        public virtual DbSet<TblMasterHistory_ActaulJobOnDailyRunResource> TblMasterHistory_ActaulJobOnDailyRunResource { get; set; }
        public virtual DbSet<TblMasterHistory_ActualJob> TblMasterHistory_ActualJob { get; set; }
        public virtual DbSet<TblMasterHistory_DailyRunResource> TblMasterHistory_DailyRunResource { get; set; }
        public virtual DbSet<TblMasterHistory_Seal> TblMasterHistory_Seal { get; set; }
        public virtual DbSet<TblMasterHistoryErrorPodByService> TblMasterHistoryErrorPodByService { get; set; }
        public virtual DbSet<TblMasterHistoryLogPodByService> TblMasterHistoryLogPodByService { get; set; }
        public virtual DbSet<TblMasterLogVerifyKey> TblMasterLogVerifyKey { get; set; }
        public virtual DbSet<TblMasterMenuDetail> TblMasterMenuDetail { get; set; }
        public virtual DbSet<TblMasterMenuDetailCommand> TblMasterMenuDetailCommand { get; set; }
        public virtual DbSet<TblMasterNemoCountryValue> TblMasterNemoCountryValue { get; set; }
        public virtual DbSet<TblMasterNemoTrafficFactorValue> TblMasterNemoTrafficFactorValue { get; set; }
        public virtual DbSet<TblMasterPlace> TblMasterPlace { get; set; }
        public virtual DbSet<TblMasterPosition> TblMasterPosition { get; set; }
        public virtual DbSet<TblMasterReasonType> TblMasterReasonType { get; set; }
        public virtual DbSet<TblMasterReport> TblMasterReport { get; set; }
        public virtual DbSet<TblMasterRouteGroup> TblMasterRouteGroup { get; set; }
        public virtual DbSet<TblMasterRouteGroup_Detail> TblMasterRouteGroup_Detail { get; set; }
        public virtual DbSet<TblMasterRouteJobHeader> TblMasterRouteJobHeader { get; set; }
        public virtual DbSet<TblMasterRouteJobServiceStopLegs> TblMasterRouteJobServiceStopLegs { get; set; }
        public virtual DbSet<TblMasterRunResource> TblMasterRunResource { get; set; }
        public virtual DbSet<TblMasterSalesLevel> TblMasterSalesLevel { get; set; }
        public virtual DbSet<TblMasterSalesTeam> TblMasterSalesTeam { get; set; }
        public virtual DbSet<TblMasterSalesTeamCustomerMapping> TblMasterSalesTeamCustomerMapping { get; set; }
        public virtual DbSet<TblMasterSalesTeamUserMapping> TblMasterSalesTeamUserMapping { get; set; }
        public virtual DbSet<TblMasterSiteNetwork> TblMasterSiteNetwork { get; set; }
        public virtual DbSet<TblMasterSiteNetworkAuditLog> TblMasterSiteNetworkAuditLog { get; set; }
        public virtual DbSet<TblMasterSiteNetworkMember> TblMasterSiteNetworkMember { get; set; }
        public virtual DbSet<TblMasterSiteNetworkUsergroup> TblMasterSiteNetworkUsergroup { get; set; }
        public virtual DbSet<TblMasterSitePathAuditLog> TblMasterSitePathAuditLog { get; set; }
        public virtual DbSet<TblMasterSitePathDestination> TblMasterSitePathDestination { get; set; }
        public virtual DbSet<TblMasterSitePathDetail> TblMasterSitePathDetail { get; set; }
        public virtual DbSet<TblMasterSitePathHeader> TblMasterSitePathHeader { get; set; }
        public virtual DbSet<TblMasterSpecialCommand> TblMasterSpecialCommand { get; set; }
        public virtual DbSet<TblMasterSubLob> TblMasterSubLob { get; set; }
        public virtual DbSet<TblMasterSubServiceType> TblMasterSubServiceType { get; set; }
        public virtual DbSet<TblMasterUser> TblMasterUser { get; set; }
        public virtual DbSet<TblMasterUserAccessGroupCountryEmail> TblMasterUserAccessGroupCountryEmail { get; set; }
        public virtual DbSet<TblMasterUserEmailTemplate> TblMasterUserEmailTemplate { get; set; }
        public virtual DbSet<TblMasterUserGroup> TblMasterUserGroup { get; set; }
        public virtual DbSet<TblPricingRule> TblPricingRule { get; set; }
        public virtual DbSet<TblSystemApiHistory> TblSystemApiHistory { get; set; }
        public virtual DbSet<TblSystemApplication> TblSystemApplication { get; set; }
        public virtual DbSet<TblSystemATMScreen> TblSystemATMScreen { get; set; }
        public virtual DbSet<TblSystemConAndDeconsolidateStatus> TblSystemConAndDeconsolidateStatus { get; set; }
        public virtual DbSet<TblSystemConfigurationAuditLog> TblSystemConfigurationAuditLog { get; set; }
        public virtual DbSet<TblSystemCustomerLocationType> TblSystemCustomerLocationType { get; set; }
        public virtual DbSet<TblSystemCustomerOfType> TblSystemCustomerOfType { get; set; }
        public virtual DbSet<TblSystemDayOfWeek> TblSystemDayOfWeek { get; set; }
        public virtual DbSet<TblSystemDenominationType> TblSystemDenominationType { get; set; }
        public virtual DbSet<TblSystemDisplayTextControlsLanguage> TblSystemDisplayTextControlsLanguage { get; set; }
        public virtual DbSet<TblSystemDomain> TblSystemDomain { get; set; }
        public virtual DbSet<TblSystemDomainAiles> TblSystemDomainAiles { get; set; }
        public virtual DbSet<TblSystemDomainDC> TblSystemDomainDC { get; set; }
        public virtual DbSet<TblSystemDomainEmailWhiteList> TblSystemDomainEmailWhiteList { get; set; }
        public virtual DbSet<TblSystemEnvironment_Global> TblSystemEnvironment_Global { get; set; }
        public virtual DbSet<TblSystemEnvironmentMasterCountry> TblSystemEnvironmentMasterCountry { get; set; }
        public virtual DbSet<TblSystemEnvironmentMasterCountryValue> TblSystemEnvironmentMasterCountryValue { get; set; }
        public virtual DbSet<TblSystemFormat_NumberCurrency> TblSystemFormat_NumberCurrency { get; set; }
        public virtual DbSet<TblSystemGlobalUnit> TblSystemGlobalUnit { get; set; }
        public virtual DbSet<TblSystemInternalDepartmentType> TblSystemInternalDepartmentType { get; set; }
        public virtual DbSet<TblSystemJobAction> TblSystemJobAction { get; set; }
        public virtual DbSet<TblSystemJobStatus> TblSystemJobStatus { get; set; }
        public virtual DbSet<TblSystemLanguage> TblSystemLanguage { get; set; }
        public virtual DbSet<TblSystemLeedToCashContractStatus> TblSystemLeedToCashContractStatus { get; set; }
        public virtual DbSet<TblSystemLeedToCashQuotationType> TblSystemLeedToCashQuotationType { get; set; }
        public virtual DbSet<TblSystemLeedToCashStatus> TblSystemLeedToCashStatus { get; set; }
        public virtual DbSet<TblSystemLineOfBusiness> TblSystemLineOfBusiness { get; set; }
        public virtual DbSet<TblSystemLog_Activity> TblSystemLog_Activity { get; set; }
        public virtual DbSet<TblSystemLog_AttemptToLogin> TblSystemLog_AttemptToLogin { get; set; }
        public virtual DbSet<TblSystemLog_HistoryError> TblSystemLog_HistoryError { get; set; }
        public virtual DbSet<TblSystemLog_SaveLastPWD> TblSystemLog_SaveLastPWD { get; set; }
        public virtual DbSet<TblSystemMessage> TblSystemMessage { get; set; }
        public virtual DbSet<TblSystemNotificationConfigPeriods> TblSystemNotificationConfigPeriods { get; set; }
        public virtual DbSet<TblSystemNotificationConfigPeriodsUsers> TblSystemNotificationConfigPeriodsUsers { get; set; }
        public virtual DbSet<TblSystemOnwardDestinationType> TblSystemOnwardDestinationType { get; set; }
        public virtual DbSet<TblSystemReportStyle> TblSystemReportStyle { get; set; }
        public virtual DbSet<TblSystemRunningVaule_Global> TblSystemRunningVaule_Global { get; set; }
        public virtual DbSet<TblSystemSealType> TblSystemSealType { get; set; }
        public virtual DbSet<TblSystemServiceJobType> TblSystemServiceJobType { get; set; }
        public virtual DbSet<TblSystemServiceJobTypeLOB> TblSystemServiceJobTypeLOB { get; set; }
        public virtual DbSet<TblSystemServiceStopType> TblSystemServiceStopType { get; set; }
        public virtual DbSet<TblSystemTimezone> TblSystemTimezone { get; set; }
        public virtual DbSet<TblSystemTripIndicator> TblSystemTripIndicator { get; set; }
        public virtual DbSet<TblTempMainPrevaultReport> TblTempMainPrevaultReport { get; set; }
        public virtual DbSet<TblTempPrevaultNonBarcodeReport> TblTempPrevaultNonBarcodeReport { get; set; }
        public virtual DbSet<TblTempPrevaultSealReport> TblTempPrevaultSealReport { get; set; }
        public virtual DbSet<TblWebAPIUser> TblWebAPIUser { get; set; }
        public virtual DbSet<TblWebAPIUser_Token> TblWebAPIUser_Token { get; set; }
        public virtual DbSet<TblWebAPIUserApplication> TblWebAPIUserApplication { get; set; }
        public virtual DbSet<SFOTblMasterCountryTimeZone> SFOTblMasterCountryTimeZone { get; set; }
        public virtual DbSet<SFOTblMasterEscalationDetail> SFOTblMasterEscalationDetail { get; set; }
        public virtual DbSet<SFOTblMasterEscalationDetail_AdditionalEmail> SFOTblMasterEscalationDetail_AdditionalEmail { get; set; }
        public virtual DbSet<SFOTblMasterEscalationDetail_Position> SFOTblMasterEscalationDetail_Position { get; set; }
        public virtual DbSet<SFOTblMasterEscalationHeader> SFOTblMasterEscalationHeader { get; set; }
        public virtual DbSet<SFOTblMasterJournal> SFOTblMasterJournal { get; set; }
        public virtual DbSet<SFOTblMasterMachine> SFOTblMasterMachine { get; set; }
        public virtual DbSet<SFOTblMasterMachine_AssociatedMachine> SFOTblMasterMachine_AssociatedMachine { get; set; }
        public virtual DbSet<SFOTblMasterMachine_Capabilties> SFOTblMasterMachine_Capabilties { get; set; }
        public virtual DbSet<SFOTblMasterMachine_Cassette> SFOTblMasterMachine_Cassette { get; set; }
        public virtual DbSet<SFOTblMasterMachine_ECash> SFOTblMasterMachine_ECash { get; set; }
        public virtual DbSet<SFOTblMasterMachine_LockType> SFOTblMasterMachine_LockType { get; set; }
        public virtual DbSet<SFOTblMasterMachineModelType> SFOTblMasterMachineModelType { get; set; }
        public virtual DbSet<SFOTblMasterMachineModelType_Capability> SFOTblMasterMachineModelType_Capability { get; set; }
        public virtual DbSet<SFOTblMasterMachineServiceType> SFOTblMasterMachineServiceType { get; set; }
        public virtual DbSet<SFOTblMasterOTCLockMode> SFOTblMasterOTCLockMode { get; set; }
        public virtual DbSet<SFOTblMasterProblem> SFOTblMasterProblem { get; set; }
        public virtual DbSet<SFOTblMasterProblem_Solution> SFOTblMasterProblem_Solution { get; set; }
        public virtual DbSet<SFOTblMasterSolution> SFOTblMasterSolution { get; set; }
        public virtual DbSet<SFOTblMasterSource> SFOTblMasterSource { get; set; }
        public virtual DbSet<SFOTblSystemAllowServiceRequestStatusDuplicate> SFOTblSystemAllowServiceRequestStatusDuplicate { get; set; }
        public virtual DbSet<SFOTblSystemDataConfiguration> SFOTblSystemDataConfiguration { get; set; }
        public virtual DbSet<SFOTblSystemDataConfiguration_Country> SFOTblSystemDataConfiguration_Country { get; set; }
        public virtual DbSet<SFOTblSystemEnvironment_Global> SFOTblSystemEnvironment_Global { get; set; }
        public virtual DbSet<SFOTblSystemEscalationRuleDetail> SFOTblSystemEscalationRuleDetail { get; set; }
        public virtual DbSet<SFOTblSystemEscalationRuleHeader> SFOTblSystemEscalationRuleHeader { get; set; }
        public virtual DbSet<SFOTblSystemEscalationRuleHeader_EscalationRuleDetail> SFOTblSystemEscalationRuleHeader_EscalationRuleDetail { get; set; }
        public virtual DbSet<SFOTblSystemLockType> SFOTblSystemLockType { get; set; }
        public virtual DbSet<SFOTblSystemMachineCapability> SFOTblSystemMachineCapability { get; set; }
        public virtual DbSet<SFOTblSystemOTCLockMode> SFOTblSystemOTCLockMode { get; set; }
        public virtual DbSet<SFOTblSystemServiceRequestState> SFOTblSystemServiceRequestState { get; set; }
        public virtual DbSet<SFOTblTransactionServiceRequest> SFOTblTransactionServiceRequest { get; set; }
        public virtual DbSet<SFOTblTransactionServiceRequest_Ecash> SFOTblTransactionServiceRequest_Ecash { get; set; }
        public virtual DbSet<SFOTblTransactionServiceRequest_Info> SFOTblTransactionServiceRequest_Info { get; set; }
        public virtual DbSet<SFOTblTransactionServiceRequest_Journal> SFOTblTransactionServiceRequest_Journal { get; set; }
        public virtual DbSet<SFOTblTransactionServiceRequest_Problem> SFOTblTransactionServiceRequest_Problem { get; set; }
        public virtual DbSet<SFOTblTransactionServiceRequest_Solution> SFOTblTransactionServiceRequest_Solution { get; set; }
        public virtual DbSet<TblMasterNemoSiteValue> TblMasterNemoSiteValue { get; set; }
        public virtual DbSet<TblMasterNemoDetailRouteOptimization> TblMasterNemoDetailRouteOptimization { get; set; }
        public virtual DbSet<TblMasterNemoErrorRouteOptimization> TblMasterNemoErrorRouteOptimization { get; set; }
        public virtual DbSet<TblMasterNemoQueueRouteOptimization> TblMasterNemoQueueRouteOptimization { get; set; }
        public virtual DbSet<TblMasterReasonUnableToService> TblMasterReasonUnableToService { get; set; }
        public virtual DbSet<TblChargeCategory_Action_Charge> TblChargeCategory_Action_Charge { get; set; }
        public virtual DbSet<TblChargeCategory_Rule> TblChargeCategory_Rule { get; set; }
        public virtual DbSet<TblLeedToCashQuotation_History> TblLeedToCashQuotation_History { get; set; }
        public virtual DbSet<TblLeedToCashProduct_ProductAttribute_Info> TblLeedToCashProduct_ProductAttribute_Info { get; set; }
        public virtual DbSet<TblMasterImage> TblMasterImage { get; set; }
        public virtual DbSet<TblMasterImageTemp> TblMasterImageTemp { get; set; }
        public virtual DbSet<TblSystemFileType> TblSystemFileType { get; set; }
        public virtual DbSet<TblSystemEnvironmentMasterSiteValue> TblSystemEnvironmentMasterSiteValue { get; set; }
        public virtual DbSet<TblMasterActualJobItemDiscrapencies> TblMasterActualJobItemDiscrapencies { get; set; }
        public virtual DbSet<TblMasterDailyRunResource_Alarm> TblMasterDailyRunResource_Alarm { get; set; }
        public virtual DbSet<TblSystemJobHideScreen> TblSystemJobHideScreen { get; set; }
        public virtual DbSet<TblMasterActualJobHideScreenMapping> TblMasterActualJobHideScreenMapping { get; set; }
        public virtual DbSet<TblMasterCustomer_JobHideScreen> TblMasterCustomer_JobHideScreen { get; set; }
        public virtual DbSet<TblMasterActualJobMCSBulkDepositReport> TblMasterActualJobMCSBulkDepositReport { get; set; }
        public virtual DbSet<TblMasterActualJobMCSBulkJammed> TblMasterActualJobMCSBulkJammed { get; set; }
        public virtual DbSet<TblMasterActualJobMCSBulkJammedEntry> TblMasterActualJobMCSBulkJammedEntry { get; set; }
        public virtual DbSet<TblMasterActualJobMCSBulkRetract> TblMasterActualJobMCSBulkRetract { get; set; }
        public virtual DbSet<TblMasterActualJobMCSBulkRetractEntry> TblMasterActualJobMCSBulkRetractEntry { get; set; }
        public virtual DbSet<TblMasterActualJobMCSBulkSuspectFakeDetail> TblMasterActualJobMCSBulkSuspectFakeDetail { get; set; }
        public virtual DbSet<TblMasterActualJobMCSBulkSuspectFakeEntry> TblMasterActualJobMCSBulkSuspectFakeEntry { get; set; }
        public virtual DbSet<TblMasterActualJobMCSCoinBulkNoteCollect> TblMasterActualJobMCSCoinBulkNoteCollect { get; set; }
        public virtual DbSet<TblMasterActualJobMCSCoinBulkNoteCollectEntry> TblMasterActualJobMCSCoinBulkNoteCollectEntry { get; set; }
        public virtual DbSet<TblMasterActualJobMCSCoinCashAdd> TblMasterActualJobMCSCoinCashAdd { get; set; }
        public virtual DbSet<TblMasterActualJobMCSCoinCashAddEntry> TblMasterActualJobMCSCoinCashAddEntry { get; set; }
        public virtual DbSet<TblMasterActualJobMCSCoinCashReturn> TblMasterActualJobMCSCoinCashReturn { get; set; }
        public virtual DbSet<TblMasterActualJobMCSCoinCashReturnEntry> TblMasterActualJobMCSCoinCashReturnEntry { get; set; }
        public virtual DbSet<TblMasterActualJobMCSCoinMachineBalance> TblMasterActualJobMCSCoinMachineBalance { get; set; }
        public virtual DbSet<TblMasterActualJobMCSCoinMachineBalanceEntry> TblMasterActualJobMCSCoinMachineBalanceEntry { get; set; }
        public virtual DbSet<TblMasterActualJobMCSCoinSuspectFake> TblMasterActualJobMCSCoinSuspectFake { get; set; }
        public virtual DbSet<TblMasterActualJobMCSCoinSuspectFakeDetail> TblMasterActualJobMCSCoinSuspectFakeDetail { get; set; }
        public virtual DbSet<TblMasterActualJobMCSCoinSuspectFakeEntry> TblMasterActualJobMCSCoinSuspectFakeEntry { get; set; }
        public virtual DbSet<TblMasterActualJobMCSItemSeal> TblMasterActualJobMCSItemSeal { get; set; }
        public virtual DbSet<TblMasterActualJobMCSRecyclingActualCountEntry> TblMasterActualJobMCSRecyclingActualCountEntry { get; set; }
        public virtual DbSet<TblMasterActualJobMCSRecyclingCashRecycling> TblMasterActualJobMCSRecyclingCashRecycling { get; set; }
        public virtual DbSet<TblMasterActualJobMCSRecyclingCashRecyclingEntry> TblMasterActualJobMCSRecyclingCashRecyclingEntry { get; set; }
        public virtual DbSet<TblMasterActualJobMCSRecyclingMachineReport> TblMasterActualJobMCSRecyclingMachineReport { get; set; }
        public virtual DbSet<TblMasterActualJobMCSRecyclingMachineReportEntry> TblMasterActualJobMCSRecyclingMachineReportEntry { get; set; }
        public virtual DbSet<TblSystemDenominationUnit> TblSystemDenominationUnit { get; set; }
        public virtual DbSet<TblSystemCassetteType> TblSystemCassetteType { get; set; }
        public virtual DbSet<SFOTblMasterCassette> SFOTblMasterCassette { get; set; }
        public virtual DbSet<TblMasterCustomer_ReasonCode> TblMasterCustomer_ReasonCode { get; set; }
        public virtual DbSet<TblMasterActualJobMCSBulkSuspectFake> TblMasterActualJobMCSBulkSuspectFake { get; set; }
        public virtual DbSet<TblMasterActualJobMCSBulkDepositReportEntry> TblMasterActualJobMCSBulkDepositReportEntry { get; set; }
        public virtual DbSet<SFOTblSystemLogCategory> SFOTblSystemLogCategory { get; set; }
        public virtual DbSet<SFOTblSystemLogProcess> SFOTblSystemLogProcess { get; set; }
        public virtual DbSet<TblMasterRouteTransactionLog> TblMasterRouteTransactionLog { get; set; }
        public virtual DbSet<TblMasterCustomerLocation_EmailAction> TblMasterCustomerLocation_EmailAction { get; set; }
        public virtual DbSet<TblSystemEmailAction> TblSystemEmailAction { get; set; }
        public virtual DbSet<SFOTblTransactionGenericLog> SFOTblTransactionGenericLog { get; set; }
        public virtual DbSet<SFOTblSystemModelConfig> SFOTblSystemModelConfig { get; set; }
        public virtual DbSet<SFOTblSystemModelConfig_Property> SFOTblSystemModelConfig_Property { get; set; }
        public virtual DbSet<SFOTblSystemModelConfig_PropertyQuery> SFOTblSystemModelConfig_PropertyQuery { get; set; }
        public virtual DbSet<TblMasterNemoQueueRouteOptimization_Detail> TblMasterNemoQueueRouteOptimization_Detail { get; set; }
        public virtual DbSet<SFOTblTransactionOTC> SFOTblTransactionOTC { get; set; }
        public virtual DbSet<TblMasterActualJobItemUnknow> TblMasterActualJobItemUnknow { get; set; }
        public virtual DbSet<TblMasterRoute> TblMasterRoute { get; set; }
        public virtual DbSet<TblMasterActualJobMCSBulkJammedDetail> TblMasterActualJobMCSBulkJammedDetail { get; set; }
        public virtual DbSet<TblMasterUserLimitedTimeAccess> TblMasterUserLimitedTimeAccess { get; set; }
        public virtual DbSet<TblMobileATMCheckListEE> TblMobileATMCheckListEE { get; set; }
        public virtual DbSet<SFOTblMasterMachineModelType_DefaultCassette> SFOTblMasterMachineModelType_DefaultCassette { get; set; }
        public virtual DbSet<TblMasterActualJobMCSBulkT1Detail> TblMasterActualJobMCSBulkT1Detail { get; set; }
        public virtual DbSet<TblSystemJobHideField> TblSystemJobHideField { get; set; }
        public virtual DbSet<TblSystemMCSCITDeliveryCommodityType> TblSystemMCSCITDeliveryCommodityType { get; set; }
        public virtual DbSet<TblSystemMCSCITDeliveryScanStatus> TblSystemMCSCITDeliveryScanStatus { get; set; }
        public virtual DbSet<TblMasterActualJobMCSCITDelivery> TblMasterActualJobMCSCITDelivery { get; set; }
        public virtual DbSet<TblMasterActualJobMCSRecyclingActualCount> TblMasterActualJobMCSRecyclingActualCount { get; set; }
        public virtual DbSet<TblSystemModeOfTransport> TblSystemModeOfTransport { get; set; }
        public virtual DbSet<TblMasterRunResource_Accident> TblMasterRunResource_Accident { get; set; }
        public virtual DbSet<TblMasterRunResource_Accident_Images> TblMasterRunResource_Accident_Images { get; set; }
        public virtual DbSet<TblMasterRunResource_Accident_ListDetailDamaged> TblMasterRunResource_Accident_ListDetailDamaged { get; set; }
        public virtual DbSet<TblMasterRunResource_GasolineExpense> TblMasterRunResource_GasolineExpense { get; set; }
        public virtual DbSet<TblMasterRunResource_Maintenance> TblMasterRunResource_Maintenance { get; set; }
        public virtual DbSet<TblMasterRunResource_Maintenance_Detail> TblMasterRunResource_Maintenance_Detail { get; set; }
        public virtual DbSet<TblMasterRunResource_PeriodicMaintenance> TblMasterRunResource_PeriodicMaintenance { get; set; }
        public virtual DbSet<TblMasterRunResource_PeriodicMaintenance_History> TblMasterRunResource_PeriodicMaintenance_History { get; set; }
        public virtual DbSet<TblSystemMaintenanceStatus> TblSystemMaintenanceStatus { get; set; }
        public virtual DbSet<TblMasterVendor> TblMasterVendor { get; set; }
        public virtual DbSet<TblMasterActualJobSumCashAdd> TblMasterActualJobSumCashAdd { get; set; }
        public virtual DbSet<TblMasterGasloine> TblMasterGasloine { get; set; }
        public virtual DbSet<TblMasterGasloine_Vendor> TblMasterGasloine_Vendor { get; set; }
        public virtual DbSet<TblMasterRunResourceBrand> TblMasterRunResourceBrand { get; set; }
        public virtual DbSet<TblMasterRunResourceType> TblMasterRunResourceType { get; set; }
        public virtual DbSet<TblMasterHistory_StandardTable> TblMasterHistory_StandardTable { get; set; }
        public virtual DbSet<TblMasterMaintenanceCategory> TblMasterMaintenanceCategory { get; set; }
        public virtual DbSet<TblMasterMaintenanceCategory_Items> TblMasterMaintenanceCategory_Items { get; set; }
        public virtual DbSet<TblSystemTitleName> TblSystemTitleName { get; set; }
        public virtual DbSet<SFOTblMasterMonitoringNetwork> SFOTblMasterMonitoringNetwork { get; set; }
        public virtual DbSet<TblSystemVersion> TblSystemVersion { get; set; }
        public virtual DbSet<TblMasterHistory_DailyRunResource_SignatureTruckToTruckTransfer> TblMasterHistory_DailyRunResource_SignatureTruckToTruckTransfer { get; set; }
        public virtual DbSet<TblMasterHistory_DolphinAssignToAnotherRun> TblMasterHistory_DolphinAssignToAnotherRun { get; set; }
        public virtual DbSet<TblMasterEmailTemplate> TblMasterEmailTemplate { get; set; }
        public virtual DbSet<TblSystemMaterRouteTypeOfWeek> TblSystemMaterRouteTypeOfWeek { get; set; }
        public virtual DbSet<TblSystemRouteOptimizationRouteType> TblSystemRouteOptimizationRouteType { get; set; }
        public virtual DbSet<TblSystemRouteOptimizationRouteType_RequestType> TblSystemRouteOptimizationRouteType_RequestType { get; set; }
        public virtual DbSet<TblSystemRouteOptimizationStatus> TblSystemRouteOptimizationStatus { get; set; }
        public virtual DbSet<TblTransactionRouteOptimizationHeader> TblTransactionRouteOptimizationHeader { get; set; }
        public virtual DbSet<TblTransactionRouteOptimizationHeader_Detail> TblTransactionRouteOptimizationHeader_Detail { get; set; }
        public virtual DbSet<TblTransactionRouteOptimizationHeader_Detail_Item> TblTransactionRouteOptimizationHeader_Detail_Item { get; set; }
        public virtual DbSet<TblSystemRouteOptimizationRequestType> TblSystemRouteOptimizationRequestType { get; set; }
        public virtual DbSet<TblMasterRoute_OptimizationStatus> TblMasterRoute_OptimizationStatus { get; set; }
        public virtual DbSet<TblTransactionRouteOptimizationHeader_Queue> TblTransactionRouteOptimizationHeader_Queue { get; set; }
        public virtual DbSet<TblMasterActualJobHeader> TblMasterActualJobHeader { get; set; }
        public virtual DbSet<TblSystemRunResourceStatus> TblSystemRunResourceStatus { get; set; }
        public virtual DbSet<TblMasterCurrency_ExchangeRate> TblMasterCurrency_ExchangeRate { get; set; }
        public virtual DbSet<TblMasterSite> TblMasterSite { get; set; }
        public virtual DbSet<TblSystemRunningValue_Custom> TblSystemRunningValue_Custom { get; set; }
        public virtual DbSet<TblMasterRoute_RouteGroupDetailMonitoring_Mapping> TblMasterRoute_RouteGroupDetailMonitoring_Mapping { get; set; }
        public virtual DbSet<TblBankCleanOutJobDelivery_NonbarCodeTemp> TblBankCleanOutJobDelivery_NonbarCodeTemp { get; set; }
        public virtual DbSet<TblBankCleanOutJobDelivery_SealTemp> TblBankCleanOutJobDelivery_SealTemp { get; set; }
        public virtual DbSet<TblBankCleanOutJobDelivery_Temp> TblBankCleanOutJobDelivery_Temp { get; set; }
        public virtual DbSet<TblMasterSite_SmartBillingSchedule> TblMasterSite_SmartBillingSchedule { get; set; }
        public virtual DbSet<TblSmartBillingSchedule_Day_Mapping> TblSmartBillingSchedule_Day_Mapping { get; set; }
        public virtual DbSet<TblMasterHistory_ReportPushToSmart> TblMasterHistory_ReportPushToSmart { get; set; }
        public virtual DbSet<TblMasterActualJobItemsLiability_Denomination> TblMasterActualJobItemsLiability_Denomination { get; set; }
        public virtual DbSet<TblSystemEnvironmentMasterCountryTreeView> TblSystemEnvironmentMasterCountryTreeView { get; set; }
        public virtual DbSet<TblVaultBalanceDetail> TblVaultBalanceDetail { get; set; }
        public virtual DbSet<TblVaultBalanceHeader> TblVaultBalanceHeader { get; set; }
        public virtual DbSet<TblMasterActualJobItemsCommodity> TblMasterActualJobItemsCommodity { get; set; }
        public virtual DbSet<TblMasterActualJobItemsSeal> TblMasterActualJobItemsSeal { get; set; }
        public virtual DbSet<TblMasterConAndDeconsolidate_Header> TblMasterConAndDeconsolidate_Header { get; set; }
        public virtual DbSet<TblVaultBalanceNonbarcode> TblVaultBalanceNonbarcode { get; set; }
        public virtual DbSet<TblVaultBalanceSealAndMaster> TblVaultBalanceSealAndMaster { get; set; }
        public virtual DbSet<TblVaultBalance_Discrepancy> TblVaultBalance_Discrepancy { get; set; }
        public virtual DbSet<TblSystemFormat_Date> TblSystemFormat_Date { get; set; }
    
        [DbFunction("OceanDbEntities", "Fn_UserDetailCountryAndRole")]
        public virtual IQueryable<Fn_UserDetailCountryAndRole_Result> Fn_UserDetailCountryAndRole(Nullable<System.Guid> countryGuid, Nullable<int> roleNumber, Nullable<bool> flagCanApprove, Nullable<bool> flagLock)
        {
            var countryGuidParameter = countryGuid.HasValue ?
                new ObjectParameter("CountryGuid", countryGuid) :
                new ObjectParameter("CountryGuid", typeof(System.Guid));
    
            var roleNumberParameter = roleNumber.HasValue ?
                new ObjectParameter("RoleNumber", roleNumber) :
                new ObjectParameter("RoleNumber", typeof(int));
    
            var flagCanApproveParameter = flagCanApprove.HasValue ?
                new ObjectParameter("FlagCanApprove", flagCanApprove) :
                new ObjectParameter("FlagCanApprove", typeof(bool));
    
            var flagLockParameter = flagLock.HasValue ?
                new ObjectParameter("FlagLock", flagLock) :
                new ObjectParameter("FlagLock", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Fn_UserDetailCountryAndRole_Result>("[OceanDbEntities].[Fn_UserDetailCountryAndRole](@CountryGuid, @RoleNumber, @FlagCanApprove, @FlagLock)", countryGuidParameter, roleNumberParameter, flagCanApproveParameter, flagLockParameter);
        }
    
        public virtual ObjectResult<AdhocCheckDuplicateJobInDayResult> Up_OceanOnlineMVC_Adhoc_CheckDuplicateJobInDay_Get(Nullable<System.Guid> siteGuid, Nullable<System.DateTime> workDate, Nullable<System.DateTime> workDateDev, Nullable<int> jobTypeID, Nullable<System.Guid> jobGuid, Nullable<System.Guid> lineOfBusiness_Guid, Nullable<System.Guid> customerGuid, Nullable<System.Guid> cusLocatinGuid, Nullable<System.Guid> customerDevGuid, Nullable<System.Guid> cusLocationDevGuid, Nullable<System.Guid> siteDevGuid)
        {
            var siteGuidParameter = siteGuid.HasValue ?
                new ObjectParameter("SiteGuid", siteGuid) :
                new ObjectParameter("SiteGuid", typeof(System.Guid));
    
            var workDateParameter = workDate.HasValue ?
                new ObjectParameter("WorkDate", workDate) :
                new ObjectParameter("WorkDate", typeof(System.DateTime));
    
            var workDateDevParameter = workDateDev.HasValue ?
                new ObjectParameter("WorkDateDev", workDateDev) :
                new ObjectParameter("WorkDateDev", typeof(System.DateTime));
    
            var jobTypeIDParameter = jobTypeID.HasValue ?
                new ObjectParameter("JobTypeID", jobTypeID) :
                new ObjectParameter("JobTypeID", typeof(int));
    
            var jobGuidParameter = jobGuid.HasValue ?
                new ObjectParameter("JobGuid", jobGuid) :
                new ObjectParameter("JobGuid", typeof(System.Guid));
    
            var lineOfBusiness_GuidParameter = lineOfBusiness_Guid.HasValue ?
                new ObjectParameter("LineOfBusiness_Guid", lineOfBusiness_Guid) :
                new ObjectParameter("LineOfBusiness_Guid", typeof(System.Guid));
    
            var customerGuidParameter = customerGuid.HasValue ?
                new ObjectParameter("CustomerGuid", customerGuid) :
                new ObjectParameter("CustomerGuid", typeof(System.Guid));
    
            var cusLocatinGuidParameter = cusLocatinGuid.HasValue ?
                new ObjectParameter("CusLocatinGuid", cusLocatinGuid) :
                new ObjectParameter("CusLocatinGuid", typeof(System.Guid));
    
            var customerDevGuidParameter = customerDevGuid.HasValue ?
                new ObjectParameter("CustomerDevGuid", customerDevGuid) :
                new ObjectParameter("CustomerDevGuid", typeof(System.Guid));
    
            var cusLocationDevGuidParameter = cusLocationDevGuid.HasValue ?
                new ObjectParameter("CusLocationDevGuid", cusLocationDevGuid) :
                new ObjectParameter("CusLocationDevGuid", typeof(System.Guid));
    
            var siteDevGuidParameter = siteDevGuid.HasValue ?
                new ObjectParameter("SiteDevGuid", siteDevGuid) :
                new ObjectParameter("SiteDevGuid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdhocCheckDuplicateJobInDayResult>("Up_OceanOnlineMVC_Adhoc_CheckDuplicateJobInDay_Get", siteGuidParameter, workDateParameter, workDateDevParameter, jobTypeIDParameter, jobGuidParameter, lineOfBusiness_GuidParameter, customerGuidParameter, cusLocatinGuidParameter, customerDevGuidParameter, cusLocationDevGuidParameter, siteDevGuidParameter);
        }
    
        public virtual ObjectResult<AdhocCustomerResult> Up_OceanOnlineMVC_Adhoc_Customer_Get(Nullable<System.Guid> userGuid, Nullable<int> intRoleType, Nullable<System.Guid> masterSite_Guid, Nullable<System.Guid> dayOfWeek_Guid, Nullable<System.Guid> jobType_Guid, Nullable<System.Guid> lineOfBusiness_Guid, Nullable<System.DateTime> workDate, Nullable<bool> flagDestination, Nullable<System.Guid> customerLocaitonPKGuid, Nullable<System.Guid> masterSiteDel_Guid, Nullable<System.Guid> subServiceType_Guid)
        {
            var userGuidParameter = userGuid.HasValue ?
                new ObjectParameter("UserGuid", userGuid) :
                new ObjectParameter("UserGuid", typeof(System.Guid));
    
            var intRoleTypeParameter = intRoleType.HasValue ?
                new ObjectParameter("IntRoleType", intRoleType) :
                new ObjectParameter("IntRoleType", typeof(int));
    
            var masterSite_GuidParameter = masterSite_Guid.HasValue ?
                new ObjectParameter("MasterSite_Guid", masterSite_Guid) :
                new ObjectParameter("MasterSite_Guid", typeof(System.Guid));
    
            var dayOfWeek_GuidParameter = dayOfWeek_Guid.HasValue ?
                new ObjectParameter("DayOfWeek_Guid", dayOfWeek_Guid) :
                new ObjectParameter("DayOfWeek_Guid", typeof(System.Guid));
    
            var jobType_GuidParameter = jobType_Guid.HasValue ?
                new ObjectParameter("JobType_Guid", jobType_Guid) :
                new ObjectParameter("JobType_Guid", typeof(System.Guid));
    
            var lineOfBusiness_GuidParameter = lineOfBusiness_Guid.HasValue ?
                new ObjectParameter("LineOfBusiness_Guid", lineOfBusiness_Guid) :
                new ObjectParameter("LineOfBusiness_Guid", typeof(System.Guid));
    
            var workDateParameter = workDate.HasValue ?
                new ObjectParameter("WorkDate", workDate) :
                new ObjectParameter("WorkDate", typeof(System.DateTime));
    
            var flagDestinationParameter = flagDestination.HasValue ?
                new ObjectParameter("FlagDestination", flagDestination) :
                new ObjectParameter("FlagDestination", typeof(bool));
    
            var customerLocaitonPKGuidParameter = customerLocaitonPKGuid.HasValue ?
                new ObjectParameter("CustomerLocaitonPKGuid", customerLocaitonPKGuid) :
                new ObjectParameter("CustomerLocaitonPKGuid", typeof(System.Guid));
    
            var masterSiteDel_GuidParameter = masterSiteDel_Guid.HasValue ?
                new ObjectParameter("MasterSiteDel_Guid", masterSiteDel_Guid) :
                new ObjectParameter("MasterSiteDel_Guid", typeof(System.Guid));
    
            var subServiceType_GuidParameter = subServiceType_Guid.HasValue ?
                new ObjectParameter("SubServiceType_Guid", subServiceType_Guid) :
                new ObjectParameter("SubServiceType_Guid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdhocCustomerResult>("Up_OceanOnlineMVC_Adhoc_Customer_Get", userGuidParameter, intRoleTypeParameter, masterSite_GuidParameter, dayOfWeek_GuidParameter, jobType_GuidParameter, lineOfBusiness_GuidParameter, workDateParameter, flagDestinationParameter, customerLocaitonPKGuidParameter, masterSiteDel_GuidParameter, subServiceType_GuidParameter);
        }
    
        public virtual ObjectResult<AdhocDestinationResult> Up_OceanOnlineMVC_Adhoc_Destination_Get(Nullable<System.Guid> siteGuid, Nullable<System.Guid> locationGuid, Nullable<System.Guid> siteDELGuid, Nullable<int> jobTypeInt)
        {
            var siteGuidParameter = siteGuid.HasValue ?
                new ObjectParameter("SiteGuid", siteGuid) :
                new ObjectParameter("SiteGuid", typeof(System.Guid));
    
            var locationGuidParameter = locationGuid.HasValue ?
                new ObjectParameter("LocationGuid", locationGuid) :
                new ObjectParameter("LocationGuid", typeof(System.Guid));
    
            var siteDELGuidParameter = siteDELGuid.HasValue ?
                new ObjectParameter("SiteDELGuid", siteDELGuid) :
                new ObjectParameter("SiteDELGuid", typeof(System.Guid));
    
            var jobTypeIntParameter = jobTypeInt.HasValue ?
                new ObjectParameter("JobTypeInt", jobTypeInt) :
                new ObjectParameter("JobTypeInt", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdhocDestinationResult>("Up_OceanOnlineMVC_Adhoc_Destination_Get", siteGuidParameter, locationGuidParameter, siteDELGuidParameter, jobTypeIntParameter);
        }
    
        public virtual ObjectResult<AuthenLoginResult> Up_OceanOnlineMVC_AuthenLogin_Get(string userName, string password, Nullable<int> applicationKey)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var applicationKeyParameter = applicationKey.HasValue ?
                new ObjectParameter("ApplicationKey", applicationKey) :
                new ObjectParameter("ApplicationKey", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AuthenLoginResult>("Up_OceanOnlineMVC_AuthenLogin_Get", userNameParameter, passwordParameter, applicationKeyParameter);
        }
    
        public virtual ObjectResult<BrinksCompanyResult> Up_OceanOnlineMVC_BrinksCompany_Get(Nullable<System.Guid> userGuid, Nullable<System.Guid> siteGuid, Nullable<System.Guid> countryGuid, Nullable<System.Guid> languageGuid, Nullable<int> intRoleType)
        {
            var userGuidParameter = userGuid.HasValue ?
                new ObjectParameter("UserGuid", userGuid) :
                new ObjectParameter("UserGuid", typeof(System.Guid));
    
            var siteGuidParameter = siteGuid.HasValue ?
                new ObjectParameter("SiteGuid", siteGuid) :
                new ObjectParameter("SiteGuid", typeof(System.Guid));
    
            var countryGuidParameter = countryGuid.HasValue ?
                new ObjectParameter("CountryGuid", countryGuid) :
                new ObjectParameter("CountryGuid", typeof(System.Guid));
    
            var languageGuidParameter = languageGuid.HasValue ?
                new ObjectParameter("LanguageGuid", languageGuid) :
                new ObjectParameter("LanguageGuid", typeof(System.Guid));
    
            var intRoleTypeParameter = intRoleType.HasValue ?
                new ObjectParameter("IntRoleType", intRoleType) :
                new ObjectParameter("IntRoleType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BrinksCompanyResult>("Up_OceanOnlineMVC_BrinksCompany_Get", userGuidParameter, siteGuidParameter, countryGuidParameter, languageGuidParameter, intRoleTypeParameter);
        }
    
        public virtual ObjectResult<BrinksSiteByUserResult> Up_OceanOnlineMVC_BrinksSiteByUser_Get(Nullable<System.Guid> userGuid, Nullable<int> roleType, Nullable<System.Guid> companyGuid, Nullable<bool> flagDestinationLocation, Nullable<bool> flagDestinationInternal, Nullable<System.Guid> customerLocaitonPKGuid, Nullable<bool> flagHubBrinksite, Nullable<System.Guid> siteGuid, Nullable<bool> flagChangedHubBrinksite)
        {
            var userGuidParameter = userGuid.HasValue ?
                new ObjectParameter("UserGuid", userGuid) :
                new ObjectParameter("UserGuid", typeof(System.Guid));
    
            var roleTypeParameter = roleType.HasValue ?
                new ObjectParameter("RoleType", roleType) :
                new ObjectParameter("RoleType", typeof(int));
    
            var companyGuidParameter = companyGuid.HasValue ?
                new ObjectParameter("CompanyGuid", companyGuid) :
                new ObjectParameter("CompanyGuid", typeof(System.Guid));
    
            var flagDestinationLocationParameter = flagDestinationLocation.HasValue ?
                new ObjectParameter("FlagDestinationLocation", flagDestinationLocation) :
                new ObjectParameter("FlagDestinationLocation", typeof(bool));
    
            var flagDestinationInternalParameter = flagDestinationInternal.HasValue ?
                new ObjectParameter("FlagDestinationInternal", flagDestinationInternal) :
                new ObjectParameter("FlagDestinationInternal", typeof(bool));
    
            var customerLocaitonPKGuidParameter = customerLocaitonPKGuid.HasValue ?
                new ObjectParameter("CustomerLocaitonPKGuid", customerLocaitonPKGuid) :
                new ObjectParameter("CustomerLocaitonPKGuid", typeof(System.Guid));
    
            var flagHubBrinksiteParameter = flagHubBrinksite.HasValue ?
                new ObjectParameter("FlagHubBrinksite", flagHubBrinksite) :
                new ObjectParameter("FlagHubBrinksite", typeof(bool));
    
            var siteGuidParameter = siteGuid.HasValue ?
                new ObjectParameter("SiteGuid", siteGuid) :
                new ObjectParameter("SiteGuid", typeof(System.Guid));
    
            var flagChangedHubBrinksiteParameter = flagChangedHubBrinksite.HasValue ?
                new ObjectParameter("FlagChangedHubBrinksite", flagChangedHubBrinksite) :
                new ObjectParameter("FlagChangedHubBrinksite", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BrinksSiteByUserResult>("Up_OceanOnlineMVC_BrinksSiteByUser_Get", userGuidParameter, roleTypeParameter, companyGuidParameter, flagDestinationLocationParameter, flagDestinationInternalParameter, customerLocaitonPKGuidParameter, flagHubBrinksiteParameter, siteGuidParameter, flagChangedHubBrinksiteParameter);
        }
    
        public virtual int Up_OceanOnlineMVC_ChangePassword_Set(string userName, string oldPassword, string newPasword)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var oldPasswordParameter = oldPassword != null ?
                new ObjectParameter("OldPassword", oldPassword) :
                new ObjectParameter("OldPassword", typeof(string));
    
            var newPaswordParameter = newPasword != null ?
                new ObjectParameter("NewPasword", newPasword) :
                new ObjectParameter("NewPasword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Up_OceanOnlineMVC_ChangePassword_Set", userNameParameter, oldPasswordParameter, newPaswordParameter);
        }
    
        public virtual ObjectResult<CountryOptionResult> Up_OceanOnlineMVC_CountryOption_Get(string strAppKey, Nullable<System.Guid> siteGuid, Nullable<System.Guid> countryGuid)
        {
            var strAppKeyParameter = strAppKey != null ?
                new ObjectParameter("strAppKey", strAppKey) :
                new ObjectParameter("strAppKey", typeof(string));
    
            var siteGuidParameter = siteGuid.HasValue ?
                new ObjectParameter("SiteGuid", siteGuid) :
                new ObjectParameter("SiteGuid", typeof(System.Guid));
    
            var countryGuidParameter = countryGuid.HasValue ?
                new ObjectParameter("CountryGuid", countryGuid) :
                new ObjectParameter("CountryGuid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CountryOptionResult>("Up_OceanOnlineMVC_CountryOption_Get", strAppKeyParameter, siteGuidParameter, countryGuidParameter);
        }
    
        public virtual ObjectResult<CustomerGeneralResult> Up_OceanOnlineMVC_Customer_General_Get(Nullable<System.Guid> userGuid, Nullable<int> intRoleType, Nullable<System.Guid> siteGuid, Nullable<System.Guid> countryGuid)
        {
            var userGuidParameter = userGuid.HasValue ?
                new ObjectParameter("UserGuid", userGuid) :
                new ObjectParameter("UserGuid", typeof(System.Guid));
    
            var intRoleTypeParameter = intRoleType.HasValue ?
                new ObjectParameter("IntRoleType", intRoleType) :
                new ObjectParameter("IntRoleType", typeof(int));
    
            var siteGuidParameter = siteGuid.HasValue ?
                new ObjectParameter("SiteGuid", siteGuid) :
                new ObjectParameter("SiteGuid", typeof(System.Guid));
    
            var countryGuidParameter = countryGuid.HasValue ?
                new ObjectParameter("CountryGuid", countryGuid) :
                new ObjectParameter("CountryGuid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CustomerGeneralResult>("Up_OceanOnlineMVC_Customer_General_Get", userGuidParameter, intRoleTypeParameter, siteGuidParameter, countryGuidParameter);
        }
    
        public virtual ObjectResult<LineOfBusinessJobTypeByFlagAdhocJobResult> Up_OceanOnlineMVC_LineOfBusinessJobTypeByFlagAdhocJob_Get(Nullable<System.Guid> languageGuid)
        {
            var languageGuidParameter = languageGuid.HasValue ?
                new ObjectParameter("LanguageGuid", languageGuid) :
                new ObjectParameter("LanguageGuid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LineOfBusinessJobTypeByFlagAdhocJobResult>("Up_OceanOnlineMVC_LineOfBusinessJobTypeByFlagAdhocJob_Get", languageGuidParameter);
        }
    
        public virtual ObjectResult<MasterMenuDetailResult> Up_OceanOnlineMVC_MasterMenuDetail_Get(string strMasterUserGuid, Nullable<int> intFlagMenuWithoutMoublie, Nullable<int> intApplicationID)
        {
            var strMasterUserGuidParameter = strMasterUserGuid != null ?
                new ObjectParameter("StrMasterUserGuid", strMasterUserGuid) :
                new ObjectParameter("StrMasterUserGuid", typeof(string));
    
            var intFlagMenuWithoutMoublieParameter = intFlagMenuWithoutMoublie.HasValue ?
                new ObjectParameter("IntFlagMenuWithoutMoublie", intFlagMenuWithoutMoublie) :
                new ObjectParameter("IntFlagMenuWithoutMoublie", typeof(int));
    
            var intApplicationIDParameter = intApplicationID.HasValue ?
                new ObjectParameter("IntApplicationID", intApplicationID) :
                new ObjectParameter("IntApplicationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MasterMenuDetailResult>("Up_OceanOnlineMVC_MasterMenuDetail_Get", strMasterUserGuidParameter, intFlagMenuWithoutMoublieParameter, intApplicationIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Up_OceanOnlineMVC_NumberJobsPerRun_Get(Nullable<System.Guid> runDailyGuid, Nullable<System.DateTime> workDate)
        {
            var runDailyGuidParameter = runDailyGuid.HasValue ?
                new ObjectParameter("RunDailyGuid", runDailyGuid) :
                new ObjectParameter("RunDailyGuid", typeof(System.Guid));
    
            var workDateParameter = workDate.HasValue ?
                new ObjectParameter("WorkDate", workDate) :
                new ObjectParameter("WorkDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Up_OceanOnlineMVC_NumberJobsPerRun_Get", runDailyGuidParameter, workDateParameter);
        }
    
        public virtual ObjectResult<PrevaultDepartmentBarcodeScanOutResult> Up_OceanOnlineMVC_PrevaultDepartment_Barcode_ScanOut_Get(Nullable<System.Guid> preVaultGuid, Nullable<System.Guid> internalDepartmentGuid, Nullable<bool> flagTVD, Nullable<bool> flagShowOWD)
        {
            var preVaultGuidParameter = preVaultGuid.HasValue ?
                new ObjectParameter("preVaultGuid", preVaultGuid) :
                new ObjectParameter("preVaultGuid", typeof(System.Guid));
    
            var internalDepartmentGuidParameter = internalDepartmentGuid.HasValue ?
                new ObjectParameter("internalDepartmentGuid", internalDepartmentGuid) :
                new ObjectParameter("internalDepartmentGuid", typeof(System.Guid));
    
            var flagTVDParameter = flagTVD.HasValue ?
                new ObjectParameter("flagTVD", flagTVD) :
                new ObjectParameter("flagTVD", typeof(bool));
    
            var flagShowOWDParameter = flagShowOWD.HasValue ?
                new ObjectParameter("flagShowOWD", flagShowOWD) :
                new ObjectParameter("flagShowOWD", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrevaultDepartmentBarcodeScanOutResult>("Up_OceanOnlineMVC_PrevaultDepartment_Barcode_ScanOut_Get", preVaultGuidParameter, internalDepartmentGuidParameter, flagTVDParameter, flagShowOWDParameter);
        }
    
        public virtual ObjectResult<PrevaultDepartmentSealConsolidateScanOutResult> Up_OceanOnlineMVC_PrevaultDepartment_Seal_SealConsolidate_ScanOut_Get(Nullable<System.Guid> preVaultGuid, Nullable<System.Guid> internalDepartmentGuid, Nullable<bool> flagTVD, Nullable<bool> flagShowOWD)
        {
            var preVaultGuidParameter = preVaultGuid.HasValue ?
                new ObjectParameter("preVaultGuid", preVaultGuid) :
                new ObjectParameter("preVaultGuid", typeof(System.Guid));
    
            var internalDepartmentGuidParameter = internalDepartmentGuid.HasValue ?
                new ObjectParameter("internalDepartmentGuid", internalDepartmentGuid) :
                new ObjectParameter("internalDepartmentGuid", typeof(System.Guid));
    
            var flagTVDParameter = flagTVD.HasValue ?
                new ObjectParameter("flagTVD", flagTVD) :
                new ObjectParameter("flagTVD", typeof(bool));
    
            var flagShowOWDParameter = flagShowOWD.HasValue ?
                new ObjectParameter("flagShowOWD", flagShowOWD) :
                new ObjectParameter("flagShowOWD", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrevaultDepartmentSealConsolidateScanOutResult>("Up_OceanOnlineMVC_PrevaultDepartment_Seal_SealConsolidate_ScanOut_Get", preVaultGuidParameter, internalDepartmentGuidParameter, flagTVDParameter, flagShowOWDParameter);
        }
    
        public virtual ObjectResult<ReportProductivityMexResult> Up_OceanOnlineMVC_Report_Productivity_Mex_Get(string dateFrom, string dateTo, string strBrinksSiteCodeGuid, string strUserName)
        {
            var dateFromParameter = dateFrom != null ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(string));
    
            var dateToParameter = dateTo != null ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(string));
    
            var strBrinksSiteCodeGuidParameter = strBrinksSiteCodeGuid != null ?
                new ObjectParameter("StrBrinksSiteCodeGuid", strBrinksSiteCodeGuid) :
                new ObjectParameter("StrBrinksSiteCodeGuid", typeof(string));
    
            var strUserNameParameter = strUserName != null ?
                new ObjectParameter("StrUserName", strUserName) :
                new ObjectParameter("StrUserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReportProductivityMexResult>("Up_OceanOnlineMVC_Report_Productivity_Mex_Get", dateFromParameter, dateToParameter, strBrinksSiteCodeGuidParameter, strUserNameParameter);
        }
    
        public virtual ObjectResult<RoutesDataResult> Up_OceanOnlineMVC_RouteOptimization_GetRoutesData(string dailyRunResourceGuids, Nullable<bool> getDataFromMasterRoute)
        {
            var dailyRunResourceGuidsParameter = dailyRunResourceGuids != null ?
                new ObjectParameter("DailyRunResourceGuids", dailyRunResourceGuids) :
                new ObjectParameter("DailyRunResourceGuids", typeof(string));
    
            var getDataFromMasterRouteParameter = getDataFromMasterRoute.HasValue ?
                new ObjectParameter("GetDataFromMasterRoute", getDataFromMasterRoute) :
                new ObjectParameter("GetDataFromMasterRoute", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RoutesDataResult>("Up_OceanOnlineMVC_RouteOptimization_GetRoutesData", dailyRunResourceGuidsParameter, getDataFromMasterRouteParameter);
        }
    
        public virtual ObjectResult<RunControlJobAndJobLegInRunResult> Up_OceanOnlineMVC_RunControl_JobAndJobLegInRun_Get(Nullable<System.Guid> runResourceGuid)
        {
            var runResourceGuidParameter = runResourceGuid.HasValue ?
                new ObjectParameter("RunResourceGuid", runResourceGuid) :
                new ObjectParameter("RunResourceGuid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RunControlJobAndJobLegInRunResult>("Up_OceanOnlineMVC_RunControl_JobAndJobLegInRun_Get", runResourceGuidParameter);
        }
    
        public virtual ObjectResult<RunControlJobByRunDisplayJobResult> Up_OceanOnlineMVC_RunControl_JobByRun_Display_Job_Get(Nullable<int> daySequence, Nullable<System.Guid> runResourceGuid, Nullable<System.Guid> siteGuid, Nullable<System.Guid> languageGuid, Nullable<bool> flagShowAll, Nullable<int> appID, Nullable<System.DateTime> clientDatetime, Nullable<System.Guid> userGuid)
        {
            var daySequenceParameter = daySequence.HasValue ?
                new ObjectParameter("DaySequence", daySequence) :
                new ObjectParameter("DaySequence", typeof(int));
    
            var runResourceGuidParameter = runResourceGuid.HasValue ?
                new ObjectParameter("RunResourceGuid", runResourceGuid) :
                new ObjectParameter("RunResourceGuid", typeof(System.Guid));
    
            var siteGuidParameter = siteGuid.HasValue ?
                new ObjectParameter("SiteGuid", siteGuid) :
                new ObjectParameter("SiteGuid", typeof(System.Guid));
    
            var languageGuidParameter = languageGuid.HasValue ?
                new ObjectParameter("LanguageGuid", languageGuid) :
                new ObjectParameter("LanguageGuid", typeof(System.Guid));
    
            var flagShowAllParameter = flagShowAll.HasValue ?
                new ObjectParameter("FlagShowAll", flagShowAll) :
                new ObjectParameter("FlagShowAll", typeof(bool));
    
            var appIDParameter = appID.HasValue ?
                new ObjectParameter("AppID", appID) :
                new ObjectParameter("AppID", typeof(int));
    
            var clientDatetimeParameter = clientDatetime.HasValue ?
                new ObjectParameter("ClientDatetime", clientDatetime) :
                new ObjectParameter("ClientDatetime", typeof(System.DateTime));
    
            var userGuidParameter = userGuid.HasValue ?
                new ObjectParameter("UserGuid", userGuid) :
                new ObjectParameter("UserGuid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RunControlJobByRunDisplayJobResult>("Up_OceanOnlineMVC_RunControl_JobByRun_Display_Job_Get", daySequenceParameter, runResourceGuidParameter, siteGuidParameter, languageGuidParameter, flagShowAllParameter, appIDParameter, clientDatetimeParameter, userGuidParameter);
        }
    
        public virtual ObjectResult<RunControlJobLegsDetailByJobGetResult> Up_OceanOnlineMVC_RunControl_JobLegsDetailByJob_Get(Nullable<System.Guid> jobHeaderGuid, Nullable<System.Guid> siteGuid, string formatDate)
        {
            var jobHeaderGuidParameter = jobHeaderGuid.HasValue ?
                new ObjectParameter("JobHeaderGuid", jobHeaderGuid) :
                new ObjectParameter("JobHeaderGuid", typeof(System.Guid));
    
            var siteGuidParameter = siteGuid.HasValue ?
                new ObjectParameter("SiteGuid", siteGuid) :
                new ObjectParameter("SiteGuid", typeof(System.Guid));
    
            var formatDateParameter = formatDate != null ?
                new ObjectParameter("FormatDate", formatDate) :
                new ObjectParameter("FormatDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RunControlJobLegsDetailByJobGetResult>("Up_OceanOnlineMVC_RunControl_JobLegsDetailByJob_Get", jobHeaderGuidParameter, siteGuidParameter, formatDateParameter);
        }
    
        public virtual int Up_OceanOnlineMVC_RunControl_JobOrderByScheduleTimeInRun_Set(Nullable<System.Guid> strDailyRunResourceGuid, Nullable<bool> flagAllowAutoReOrderJobIndexWhenAssignToRun, Nullable<System.Guid> masterRouteGuid, Nullable<System.DateTime> workDate, Nullable<System.Guid> siteGuid, Nullable<System.Guid> languageGuid, string strUserClient, Nullable<System.DateTime> strDateTimeClient)
        {
            var strDailyRunResourceGuidParameter = strDailyRunResourceGuid.HasValue ?
                new ObjectParameter("StrDailyRunResourceGuid", strDailyRunResourceGuid) :
                new ObjectParameter("StrDailyRunResourceGuid", typeof(System.Guid));
    
            var flagAllowAutoReOrderJobIndexWhenAssignToRunParameter = flagAllowAutoReOrderJobIndexWhenAssignToRun.HasValue ?
                new ObjectParameter("FlagAllowAutoReOrderJobIndexWhenAssignToRun", flagAllowAutoReOrderJobIndexWhenAssignToRun) :
                new ObjectParameter("FlagAllowAutoReOrderJobIndexWhenAssignToRun", typeof(bool));
    
            var masterRouteGuidParameter = masterRouteGuid.HasValue ?
                new ObjectParameter("MasterRouteGuid", masterRouteGuid) :
                new ObjectParameter("MasterRouteGuid", typeof(System.Guid));
    
            var workDateParameter = workDate.HasValue ?
                new ObjectParameter("WorkDate", workDate) :
                new ObjectParameter("WorkDate", typeof(System.DateTime));
    
            var siteGuidParameter = siteGuid.HasValue ?
                new ObjectParameter("SiteGuid", siteGuid) :
                new ObjectParameter("SiteGuid", typeof(System.Guid));
    
            var languageGuidParameter = languageGuid.HasValue ?
                new ObjectParameter("LanguageGuid", languageGuid) :
                new ObjectParameter("LanguageGuid", typeof(System.Guid));
    
            var strUserClientParameter = strUserClient != null ?
                new ObjectParameter("StrUserClient", strUserClient) :
                new ObjectParameter("StrUserClient", typeof(string));
    
            var strDateTimeClientParameter = strDateTimeClient.HasValue ?
                new ObjectParameter("StrDateTimeClient", strDateTimeClient) :
                new ObjectParameter("StrDateTimeClient", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Up_OceanOnlineMVC_RunControl_JobOrderByScheduleTimeInRun_Set", strDailyRunResourceGuidParameter, flagAllowAutoReOrderJobIndexWhenAssignToRunParameter, masterRouteGuidParameter, workDateParameter, siteGuidParameter, languageGuidParameter, strUserClientParameter, strDateTimeClientParameter);
        }
    
        public virtual ObjectResult<RunControlValidateEMPRequestOTCResult> Up_OceanOnlineMVC_RunControl_ValidateEMPRequestOTC_Get(Nullable<System.Guid> masterSite_Guid, Nullable<System.Guid> masterDailyRunResource_Guid, string masterMachine_Guid)
        {
            var masterSite_GuidParameter = masterSite_Guid.HasValue ?
                new ObjectParameter("MasterSite_Guid", masterSite_Guid) :
                new ObjectParameter("MasterSite_Guid", typeof(System.Guid));
    
            var masterDailyRunResource_GuidParameter = masterDailyRunResource_Guid.HasValue ?
                new ObjectParameter("MasterDailyRunResource_Guid", masterDailyRunResource_Guid) :
                new ObjectParameter("MasterDailyRunResource_Guid", typeof(System.Guid));
    
            var masterMachine_GuidParameter = masterMachine_Guid != null ?
                new ObjectParameter("MasterMachine_Guid", masterMachine_Guid) :
                new ObjectParameter("MasterMachine_Guid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RunControlValidateEMPRequestOTCResult>("Up_OceanOnlineMVC_RunControl_ValidateEMPRequestOTC_Get", masterSite_GuidParameter, masterDailyRunResource_GuidParameter, masterMachine_GuidParameter);
        }
    
        public virtual ObjectResult<RunResourceByGroupDetailAndWorkDayResult> Up_OceanOnlineMVC_RunResourceByGroupDetailAndWorkDay_Get(Nullable<System.DateTime> workdate, Nullable<System.Guid> masterRouteDetail_Guid, Nullable<System.Guid> siteGuid)
        {
            var workdateParameter = workdate.HasValue ?
                new ObjectParameter("Workdate", workdate) :
                new ObjectParameter("Workdate", typeof(System.DateTime));
    
            var masterRouteDetail_GuidParameter = masterRouteDetail_Guid.HasValue ?
                new ObjectParameter("MasterRouteDetail_Guid", masterRouteDetail_Guid) :
                new ObjectParameter("MasterRouteDetail_Guid", typeof(System.Guid));
    
            var siteGuidParameter = siteGuid.HasValue ?
                new ObjectParameter("SiteGuid", siteGuid) :
                new ObjectParameter("SiteGuid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RunResourceByGroupDetailAndWorkDayResult>("Up_OceanOnlineMVC_RunResourceByGroupDetailAndWorkDay_Get", workdateParameter, masterRouteDetail_GuidParameter, siteGuidParameter);
        }
    
        public virtual ObjectResult<Nullable<System.DateTime>> Up_OceanOnlineMVC_SFO_CalculateTime_Get(Nullable<System.DateTime> timeFormat, Nullable<int> userTimezoneID, Nullable<int> targetTimezoneID)
        {
            var timeFormatParameter = timeFormat.HasValue ?
                new ObjectParameter("TimeFormat", timeFormat) :
                new ObjectParameter("TimeFormat", typeof(System.DateTime));
    
            var userTimezoneIDParameter = userTimezoneID.HasValue ?
                new ObjectParameter("UserTimezoneID", userTimezoneID) :
                new ObjectParameter("UserTimezoneID", typeof(int));
    
            var targetTimezoneIDParameter = targetTimezoneID.HasValue ?
                new ObjectParameter("TargetTimezoneID", targetTimezoneID) :
                new ObjectParameter("TargetTimezoneID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("Up_OceanOnlineMVC_SFO_CalculateTime_Get", timeFormatParameter, userTimezoneIDParameter, targetTimezoneIDParameter);
        }
    
        public virtual ObjectResult<SFOOTCRequestResult> Up_OceanOnlineMVC_SFO_GetOTCRequest_Get(Nullable<System.Guid> masterCountry_Guid)
        {
            var masterCountry_GuidParameter = masterCountry_Guid.HasValue ?
                new ObjectParameter("MasterCountry_Guid", masterCountry_Guid) :
                new ObjectParameter("MasterCountry_Guid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SFOOTCRequestResult>("Up_OceanOnlineMVC_SFO_GetOTCRequest_Get", masterCountry_GuidParameter);
        }
    
        public virtual ObjectResult<Up_OceanOnlineMVC_SFO_GetServiceRequestByGuidEscalation_Result> Up_OceanOnlineMVC_SFO_GetServiceRequestByGuidEscalation(Nullable<System.Guid> serviceRequestGuid)
        {
            var serviceRequestGuidParameter = serviceRequestGuid.HasValue ?
                new ObjectParameter("ServiceRequestGuid", serviceRequestGuid) :
                new ObjectParameter("ServiceRequestGuid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Up_OceanOnlineMVC_SFO_GetServiceRequestByGuidEscalation_Result>("Up_OceanOnlineMVC_SFO_GetServiceRequestByGuidEscalation", serviceRequestGuidParameter);
        }
    
        public virtual ObjectResult<Up_OceanOnlineMVC_SFO_SearchDataConfiguration_Get_Result> Up_OceanOnlineMVC_SFO_SearchDataConfiguration_Get(Nullable<System.Guid> countryGuid, string dataKey)
        {
            var countryGuidParameter = countryGuid.HasValue ?
                new ObjectParameter("CountryGuid", countryGuid) :
                new ObjectParameter("CountryGuid", typeof(System.Guid));
    
            var dataKeyParameter = dataKey != null ?
                new ObjectParameter("DataKey", dataKey) :
                new ObjectParameter("DataKey", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Up_OceanOnlineMVC_SFO_SearchDataConfiguration_Get_Result>("Up_OceanOnlineMVC_SFO_SearchDataConfiguration_Get", countryGuidParameter, dataKeyParameter);
        }
    
        public virtual ObjectResult<Up_OceanOnlineMVC_SFO_SearchMachine_Get_Result> Up_OceanOnlineMVC_SFO_SearchMachine_Get(Nullable<System.Guid> guid, Nullable<System.Guid> siteGuid, Nullable<System.Guid> countryGuid, Nullable<System.Guid> customerGuid, Nullable<System.Guid> vendorGuid, Nullable<System.Guid> branchGuid, Nullable<System.Guid> machineTypeGuid, string city, Nullable<System.Guid> servicingBranchGuid, string machineID, string serailNumber, string address, Nullable<System.Guid> countryStateGuid, string postalCode, string ticketNumber, string customerMachineID, string vendorMachineID, Nullable<System.Guid> userGuid, string customerLocationID, string customerPhone, string customerEmail, string branchAddress, Nullable<bool> flagDisable, Nullable<bool> flagSuspension, string actualCustomerPhone, string actualCustomerEmail, Nullable<System.Guid> sFOSystemMachineOwner_Guid, Nullable<System.Guid> assignedBranchGuid, Nullable<bool> flagAllMachineType, Nullable<System.DateTime> dateContract, Nullable<int> maxRow, Nullable<bool> isExport, Nullable<bool> flagSheetMachine, Nullable<bool> flagSheetServiceHour, Nullable<bool> flagSheetCassette)
        {
            var guidParameter = guid.HasValue ?
                new ObjectParameter("Guid", guid) :
                new ObjectParameter("Guid", typeof(System.Guid));
    
            var siteGuidParameter = siteGuid.HasValue ?
                new ObjectParameter("SiteGuid", siteGuid) :
                new ObjectParameter("SiteGuid", typeof(System.Guid));
    
            var countryGuidParameter = countryGuid.HasValue ?
                new ObjectParameter("CountryGuid", countryGuid) :
                new ObjectParameter("CountryGuid", typeof(System.Guid));
    
            var customerGuidParameter = customerGuid.HasValue ?
                new ObjectParameter("CustomerGuid", customerGuid) :
                new ObjectParameter("CustomerGuid", typeof(System.Guid));
    
            var vendorGuidParameter = vendorGuid.HasValue ?
                new ObjectParameter("VendorGuid", vendorGuid) :
                new ObjectParameter("VendorGuid", typeof(System.Guid));
    
            var branchGuidParameter = branchGuid.HasValue ?
                new ObjectParameter("BranchGuid", branchGuid) :
                new ObjectParameter("BranchGuid", typeof(System.Guid));
    
            var machineTypeGuidParameter = machineTypeGuid.HasValue ?
                new ObjectParameter("MachineTypeGuid", machineTypeGuid) :
                new ObjectParameter("MachineTypeGuid", typeof(System.Guid));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var servicingBranchGuidParameter = servicingBranchGuid.HasValue ?
                new ObjectParameter("ServicingBranchGuid", servicingBranchGuid) :
                new ObjectParameter("ServicingBranchGuid", typeof(System.Guid));
    
            var machineIDParameter = machineID != null ?
                new ObjectParameter("MachineID", machineID) :
                new ObjectParameter("MachineID", typeof(string));
    
            var serailNumberParameter = serailNumber != null ?
                new ObjectParameter("SerailNumber", serailNumber) :
                new ObjectParameter("SerailNumber", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var countryStateGuidParameter = countryStateGuid.HasValue ?
                new ObjectParameter("CountryStateGuid", countryStateGuid) :
                new ObjectParameter("CountryStateGuid", typeof(System.Guid));
    
            var postalCodeParameter = postalCode != null ?
                new ObjectParameter("PostalCode", postalCode) :
                new ObjectParameter("PostalCode", typeof(string));
    
            var ticketNumberParameter = ticketNumber != null ?
                new ObjectParameter("TicketNumber", ticketNumber) :
                new ObjectParameter("TicketNumber", typeof(string));
    
            var customerMachineIDParameter = customerMachineID != null ?
                new ObjectParameter("CustomerMachineID", customerMachineID) :
                new ObjectParameter("CustomerMachineID", typeof(string));
    
            var vendorMachineIDParameter = vendorMachineID != null ?
                new ObjectParameter("VendorMachineID", vendorMachineID) :
                new ObjectParameter("VendorMachineID", typeof(string));
    
            var userGuidParameter = userGuid.HasValue ?
                new ObjectParameter("UserGuid", userGuid) :
                new ObjectParameter("UserGuid", typeof(System.Guid));
    
            var customerLocationIDParameter = customerLocationID != null ?
                new ObjectParameter("CustomerLocationID", customerLocationID) :
                new ObjectParameter("CustomerLocationID", typeof(string));
    
            var customerPhoneParameter = customerPhone != null ?
                new ObjectParameter("CustomerPhone", customerPhone) :
                new ObjectParameter("CustomerPhone", typeof(string));
    
            var customerEmailParameter = customerEmail != null ?
                new ObjectParameter("CustomerEmail", customerEmail) :
                new ObjectParameter("CustomerEmail", typeof(string));
    
            var branchAddressParameter = branchAddress != null ?
                new ObjectParameter("BranchAddress", branchAddress) :
                new ObjectParameter("BranchAddress", typeof(string));
    
            var flagDisableParameter = flagDisable.HasValue ?
                new ObjectParameter("FlagDisable", flagDisable) :
                new ObjectParameter("FlagDisable", typeof(bool));
    
            var flagSuspensionParameter = flagSuspension.HasValue ?
                new ObjectParameter("FlagSuspension", flagSuspension) :
                new ObjectParameter("FlagSuspension", typeof(bool));
    
            var actualCustomerPhoneParameter = actualCustomerPhone != null ?
                new ObjectParameter("ActualCustomerPhone", actualCustomerPhone) :
                new ObjectParameter("ActualCustomerPhone", typeof(string));
    
            var actualCustomerEmailParameter = actualCustomerEmail != null ?
                new ObjectParameter("ActualCustomerEmail", actualCustomerEmail) :
                new ObjectParameter("ActualCustomerEmail", typeof(string));
    
            var sFOSystemMachineOwner_GuidParameter = sFOSystemMachineOwner_Guid.HasValue ?
                new ObjectParameter("SFOSystemMachineOwner_Guid", sFOSystemMachineOwner_Guid) :
                new ObjectParameter("SFOSystemMachineOwner_Guid", typeof(System.Guid));
    
            var assignedBranchGuidParameter = assignedBranchGuid.HasValue ?
                new ObjectParameter("AssignedBranchGuid", assignedBranchGuid) :
                new ObjectParameter("AssignedBranchGuid", typeof(System.Guid));
    
            var flagAllMachineTypeParameter = flagAllMachineType.HasValue ?
                new ObjectParameter("FlagAllMachineType", flagAllMachineType) :
                new ObjectParameter("FlagAllMachineType", typeof(bool));
    
            var dateContractParameter = dateContract.HasValue ?
                new ObjectParameter("DateContract", dateContract) :
                new ObjectParameter("DateContract", typeof(System.DateTime));
    
            var maxRowParameter = maxRow.HasValue ?
                new ObjectParameter("MaxRow", maxRow) :
                new ObjectParameter("MaxRow", typeof(int));
    
            var isExportParameter = isExport.HasValue ?
                new ObjectParameter("isExport", isExport) :
                new ObjectParameter("isExport", typeof(bool));
    
            var flagSheetMachineParameter = flagSheetMachine.HasValue ?
                new ObjectParameter("FlagSheetMachine", flagSheetMachine) :
                new ObjectParameter("FlagSheetMachine", typeof(bool));
    
            var flagSheetServiceHourParameter = flagSheetServiceHour.HasValue ?
                new ObjectParameter("FlagSheetServiceHour", flagSheetServiceHour) :
                new ObjectParameter("FlagSheetServiceHour", typeof(bool));
    
            var flagSheetCassetteParameter = flagSheetCassette.HasValue ?
                new ObjectParameter("FlagSheetCassette", flagSheetCassette) :
                new ObjectParameter("FlagSheetCassette", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Up_OceanOnlineMVC_SFO_SearchMachine_Get_Result>("Up_OceanOnlineMVC_SFO_SearchMachine_Get", guidParameter, siteGuidParameter, countryGuidParameter, customerGuidParameter, vendorGuidParameter, branchGuidParameter, machineTypeGuidParameter, cityParameter, servicingBranchGuidParameter, machineIDParameter, serailNumberParameter, addressParameter, countryStateGuidParameter, postalCodeParameter, ticketNumberParameter, customerMachineIDParameter, vendorMachineIDParameter, userGuidParameter, customerLocationIDParameter, customerPhoneParameter, customerEmailParameter, branchAddressParameter, flagDisableParameter, flagSuspensionParameter, actualCustomerPhoneParameter, actualCustomerEmailParameter, sFOSystemMachineOwner_GuidParameter, assignedBranchGuidParameter, flagAllMachineTypeParameter, dateContractParameter, maxRowParameter, isExportParameter, flagSheetMachineParameter, flagSheetServiceHourParameter, flagSheetCassetteParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Up_OceanOnlineMVC_SFO_ServiceRequest_Get(Nullable<System.Guid> guid, Nullable<int> dateStatus, Nullable<System.Guid> masterSite_Guid, Nullable<System.Guid> masterActualJobHeader_Guid, Nullable<System.Guid> masterCustomerLocation_Guid, Nullable<System.Guid> sFOMasterCategory_Guid, Nullable<System.Guid> sFOMasterServiceRequestType_Guid, Nullable<System.Guid> sFOMasterPriority_Guid, Nullable<System.Guid> sFOMasterSource_OpenSource_Guid, Nullable<System.Guid> sFOMasterSource_CloseSource_Guid, Nullable<System.Guid> sFOMasterReason_Guid, string ticketNumber, Nullable<System.Guid> ticketStatus_Guid, Nullable<System.DateTime> requestedServiceDate, Nullable<System.DateTime> dateTimeOpened, Nullable<System.DateTime> dateTimeClosed, string contactName, string contactPhone, string customerReferenceNumber, string responderReferenceNumber, string escalationType, Nullable<int> escalationLevel, Nullable<System.DateTime> escalationTime, Nullable<System.DateTime> dateTimeNotified, string reportedServiceRequestDescription, string eCashDenomination, Nullable<int> eCashAmount, string eCashCurrency, string techMeetName, string techMeetPhone, string techMeetCompanyName, string techMeetReasonID, string techMeetSecurityRequired, string createdBy, Nullable<bool> flagRescheduleRequest, Nullable<System.Guid> reason_Guid, string resolvedBy, string vendorSolutionID, Nullable<bool> flagBillableIndicator, Nullable<System.DateTime> calculatedDueDateTime, Nullable<bool> flagNotifyNow, string technician, Nullable<System.DateTime> dateTimeAcknowledged, Nullable<System.DateTime> dateTimeETA, Nullable<System.DateTime> dateTimeDepartureToOnsite, Nullable<System.DateTime> dateTimeReportedOnsite, Nullable<System.DateTime> dateTimeReportedResolved, Nullable<System.DateTime> dateTimeReportedDeparted, Nullable<System.DateTime> dateTimeReportedReturned, Nullable<System.DateTime> dateTimeDateTimeDown, Nullable<System.DateTime> dateTimeDispatched, Nullable<System.DateTime> dateTimeCustomerStart, Nullable<System.DateTime> dateTimeCustomerDispatched, Nullable<int> totalPremiseTime, Nullable<System.Guid> massServiceRequest_Guid, string pACNCode, Nullable<System.DateTime> dateTimeRequestedNotification, string cancellationReason, string customerCommentIn, string customerCommentOut, string customerNetworkID, string vendorNetworkID, string fileReference, string vendorCommentIn, string vendorCommentOut, string owner, Nullable<System.Guid> ownerSource_Guid, Nullable<bool> flagClosedOnFirstContact, string brinksLogNumber, Nullable<bool> flagNonbillableToBranch, Nullable<bool> flagNonbillableToCustomer, Nullable<bool> flagSpecialCharges, Nullable<decimal> chargeAmount, Nullable<bool> flagRescheduleApproved, Nullable<bool> flagDisable, string userCreated, Nullable<System.DateTimeOffset> datetimeCreated, Nullable<System.DateTimeOffset> universalDatetimeCreated, string userModified, Nullable<System.DateTimeOffset> datetimeModified, Nullable<System.DateTimeOffset> universalDatetimeModified, Nullable<System.Guid> timeZoneLocal_Guid, Nullable<System.Guid> timeZoneMachine_Guid, string brinksNote, string reasonName, Nullable<System.DateTimeOffset> dateTimeDueDate, Nullable<System.DateTimeOffset> dateTimeServiceDate, Nullable<bool> flagStampDispatch, Nullable<bool> flagStampAccept, Nullable<bool> flagStampArrive, Nullable<bool> flagStampRestore, Nullable<bool> flagStampDepart, Nullable<bool> flagStampReturn, string cancelReason, string responderName, Nullable<System.Guid> previousTicketStatus_Guid, Nullable<bool> flagTechMeetSecurityRequired, string reportedDescription, Nullable<System.Guid> parentTicketGuid, string operationCode, Nullable<System.Guid> masterDailyRunResource_Guid, string responderStatus, Nullable<bool> flagStampReportedOnsite, Nullable<bool> flagStampETA, Nullable<int> lockHour, Nullable<System.DateTime> date, Nullable<int> timeBlock, string rescheduleReason, Nullable<bool> flagCloseOTC, string responderEmail, string responderShift, Nullable<bool> flagATM, Nullable<bool> flagFLM, Nullable<bool> flagCompuSafe, string massRequestID, Nullable<bool> flagEcash, Nullable<System.Guid> previousServiceRequestState_Guid, Nullable<int> envBranchTypeId, Nullable<bool> flagBranchVendor, Nullable<System.Guid> sFOMasterMachineServiceType_Guid, Nullable<bool> flagOnHold, Nullable<bool> flagNonCharge, Nullable<bool> flagAllowRequestSLM, Nullable<System.DateTimeOffset> dateTimeTechmeet, Nullable<int> sFOSystemCloseType_ID, Nullable<System.DateTimeOffset> dateTimeTechnicianArrived, Nullable<System.DateTimeOffset> dateTimeTechnicianNotArrive)
        {
            var guidParameter = guid.HasValue ?
                new ObjectParameter("Guid", guid) :
                new ObjectParameter("Guid", typeof(System.Guid));
    
            var dateStatusParameter = dateStatus.HasValue ?
                new ObjectParameter("DateStatus", dateStatus) :
                new ObjectParameter("DateStatus", typeof(int));
    
            var masterSite_GuidParameter = masterSite_Guid.HasValue ?
                new ObjectParameter("MasterSite_Guid", masterSite_Guid) :
                new ObjectParameter("MasterSite_Guid", typeof(System.Guid));
    
            var masterActualJobHeader_GuidParameter = masterActualJobHeader_Guid.HasValue ?
                new ObjectParameter("MasterActualJobHeader_Guid", masterActualJobHeader_Guid) :
                new ObjectParameter("MasterActualJobHeader_Guid", typeof(System.Guid));
    
            var masterCustomerLocation_GuidParameter = masterCustomerLocation_Guid.HasValue ?
                new ObjectParameter("MasterCustomerLocation_Guid", masterCustomerLocation_Guid) :
                new ObjectParameter("MasterCustomerLocation_Guid", typeof(System.Guid));
    
            var sFOMasterCategory_GuidParameter = sFOMasterCategory_Guid.HasValue ?
                new ObjectParameter("SFOMasterCategory_Guid", sFOMasterCategory_Guid) :
                new ObjectParameter("SFOMasterCategory_Guid", typeof(System.Guid));
    
            var sFOMasterServiceRequestType_GuidParameter = sFOMasterServiceRequestType_Guid.HasValue ?
                new ObjectParameter("SFOMasterServiceRequestType_Guid", sFOMasterServiceRequestType_Guid) :
                new ObjectParameter("SFOMasterServiceRequestType_Guid", typeof(System.Guid));
    
            var sFOMasterPriority_GuidParameter = sFOMasterPriority_Guid.HasValue ?
                new ObjectParameter("SFOMasterPriority_Guid", sFOMasterPriority_Guid) :
                new ObjectParameter("SFOMasterPriority_Guid", typeof(System.Guid));
    
            var sFOMasterSource_OpenSource_GuidParameter = sFOMasterSource_OpenSource_Guid.HasValue ?
                new ObjectParameter("SFOMasterSource_OpenSource_Guid", sFOMasterSource_OpenSource_Guid) :
                new ObjectParameter("SFOMasterSource_OpenSource_Guid", typeof(System.Guid));
    
            var sFOMasterSource_CloseSource_GuidParameter = sFOMasterSource_CloseSource_Guid.HasValue ?
                new ObjectParameter("SFOMasterSource_CloseSource_Guid", sFOMasterSource_CloseSource_Guid) :
                new ObjectParameter("SFOMasterSource_CloseSource_Guid", typeof(System.Guid));
    
            var sFOMasterReason_GuidParameter = sFOMasterReason_Guid.HasValue ?
                new ObjectParameter("SFOMasterReason_Guid", sFOMasterReason_Guid) :
                new ObjectParameter("SFOMasterReason_Guid", typeof(System.Guid));
    
            var ticketNumberParameter = ticketNumber != null ?
                new ObjectParameter("TicketNumber", ticketNumber) :
                new ObjectParameter("TicketNumber", typeof(string));
    
            var ticketStatus_GuidParameter = ticketStatus_Guid.HasValue ?
                new ObjectParameter("TicketStatus_Guid", ticketStatus_Guid) :
                new ObjectParameter("TicketStatus_Guid", typeof(System.Guid));
    
            var requestedServiceDateParameter = requestedServiceDate.HasValue ?
                new ObjectParameter("RequestedServiceDate", requestedServiceDate) :
                new ObjectParameter("RequestedServiceDate", typeof(System.DateTime));
    
            var dateTimeOpenedParameter = dateTimeOpened.HasValue ?
                new ObjectParameter("DateTimeOpened", dateTimeOpened) :
                new ObjectParameter("DateTimeOpened", typeof(System.DateTime));
    
            var dateTimeClosedParameter = dateTimeClosed.HasValue ?
                new ObjectParameter("DateTimeClosed", dateTimeClosed) :
                new ObjectParameter("DateTimeClosed", typeof(System.DateTime));
    
            var contactNameParameter = contactName != null ?
                new ObjectParameter("ContactName", contactName) :
                new ObjectParameter("ContactName", typeof(string));
    
            var contactPhoneParameter = contactPhone != null ?
                new ObjectParameter("ContactPhone", contactPhone) :
                new ObjectParameter("ContactPhone", typeof(string));
    
            var customerReferenceNumberParameter = customerReferenceNumber != null ?
                new ObjectParameter("CustomerReferenceNumber", customerReferenceNumber) :
                new ObjectParameter("CustomerReferenceNumber", typeof(string));
    
            var responderReferenceNumberParameter = responderReferenceNumber != null ?
                new ObjectParameter("ResponderReferenceNumber", responderReferenceNumber) :
                new ObjectParameter("ResponderReferenceNumber", typeof(string));
    
            var escalationTypeParameter = escalationType != null ?
                new ObjectParameter("EscalationType", escalationType) :
                new ObjectParameter("EscalationType", typeof(string));
    
            var escalationLevelParameter = escalationLevel.HasValue ?
                new ObjectParameter("EscalationLevel", escalationLevel) :
                new ObjectParameter("EscalationLevel", typeof(int));
    
            var escalationTimeParameter = escalationTime.HasValue ?
                new ObjectParameter("EscalationTime", escalationTime) :
                new ObjectParameter("EscalationTime", typeof(System.DateTime));
    
            var dateTimeNotifiedParameter = dateTimeNotified.HasValue ?
                new ObjectParameter("DateTimeNotified", dateTimeNotified) :
                new ObjectParameter("DateTimeNotified", typeof(System.DateTime));
    
            var reportedServiceRequestDescriptionParameter = reportedServiceRequestDescription != null ?
                new ObjectParameter("ReportedServiceRequestDescription", reportedServiceRequestDescription) :
                new ObjectParameter("ReportedServiceRequestDescription", typeof(string));
    
            var eCashDenominationParameter = eCashDenomination != null ?
                new ObjectParameter("eCashDenomination", eCashDenomination) :
                new ObjectParameter("eCashDenomination", typeof(string));
    
            var eCashAmountParameter = eCashAmount.HasValue ?
                new ObjectParameter("eCashAmount", eCashAmount) :
                new ObjectParameter("eCashAmount", typeof(int));
    
            var eCashCurrencyParameter = eCashCurrency != null ?
                new ObjectParameter("eCashCurrency", eCashCurrency) :
                new ObjectParameter("eCashCurrency", typeof(string));
    
            var techMeetNameParameter = techMeetName != null ?
                new ObjectParameter("TechMeetName", techMeetName) :
                new ObjectParameter("TechMeetName", typeof(string));
    
            var techMeetPhoneParameter = techMeetPhone != null ?
                new ObjectParameter("TechMeetPhone", techMeetPhone) :
                new ObjectParameter("TechMeetPhone", typeof(string));
    
            var techMeetCompanyNameParameter = techMeetCompanyName != null ?
                new ObjectParameter("TechMeetCompanyName", techMeetCompanyName) :
                new ObjectParameter("TechMeetCompanyName", typeof(string));
    
            var techMeetReasonIDParameter = techMeetReasonID != null ?
                new ObjectParameter("TechMeetReasonID", techMeetReasonID) :
                new ObjectParameter("TechMeetReasonID", typeof(string));
    
            var techMeetSecurityRequiredParameter = techMeetSecurityRequired != null ?
                new ObjectParameter("TechMeetSecurityRequired", techMeetSecurityRequired) :
                new ObjectParameter("TechMeetSecurityRequired", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var flagRescheduleRequestParameter = flagRescheduleRequest.HasValue ?
                new ObjectParameter("FlagRescheduleRequest", flagRescheduleRequest) :
                new ObjectParameter("FlagRescheduleRequest", typeof(bool));
    
            var reason_GuidParameter = reason_Guid.HasValue ?
                new ObjectParameter("Reason_Guid", reason_Guid) :
                new ObjectParameter("Reason_Guid", typeof(System.Guid));
    
            var resolvedByParameter = resolvedBy != null ?
                new ObjectParameter("ResolvedBy", resolvedBy) :
                new ObjectParameter("ResolvedBy", typeof(string));
    
            var vendorSolutionIDParameter = vendorSolutionID != null ?
                new ObjectParameter("VendorSolutionID", vendorSolutionID) :
                new ObjectParameter("VendorSolutionID", typeof(string));
    
            var flagBillableIndicatorParameter = flagBillableIndicator.HasValue ?
                new ObjectParameter("FlagBillableIndicator", flagBillableIndicator) :
                new ObjectParameter("FlagBillableIndicator", typeof(bool));
    
            var calculatedDueDateTimeParameter = calculatedDueDateTime.HasValue ?
                new ObjectParameter("CalculatedDueDateTime", calculatedDueDateTime) :
                new ObjectParameter("CalculatedDueDateTime", typeof(System.DateTime));
    
            var flagNotifyNowParameter = flagNotifyNow.HasValue ?
                new ObjectParameter("FlagNotifyNow", flagNotifyNow) :
                new ObjectParameter("FlagNotifyNow", typeof(bool));
    
            var technicianParameter = technician != null ?
                new ObjectParameter("Technician", technician) :
                new ObjectParameter("Technician", typeof(string));
    
            var dateTimeAcknowledgedParameter = dateTimeAcknowledged.HasValue ?
                new ObjectParameter("DateTimeAcknowledged", dateTimeAcknowledged) :
                new ObjectParameter("DateTimeAcknowledged", typeof(System.DateTime));
    
            var dateTimeETAParameter = dateTimeETA.HasValue ?
                new ObjectParameter("DateTimeETA", dateTimeETA) :
                new ObjectParameter("DateTimeETA", typeof(System.DateTime));
    
            var dateTimeDepartureToOnsiteParameter = dateTimeDepartureToOnsite.HasValue ?
                new ObjectParameter("DateTimeDepartureToOnsite", dateTimeDepartureToOnsite) :
                new ObjectParameter("DateTimeDepartureToOnsite", typeof(System.DateTime));
    
            var dateTimeReportedOnsiteParameter = dateTimeReportedOnsite.HasValue ?
                new ObjectParameter("DateTimeReportedOnsite", dateTimeReportedOnsite) :
                new ObjectParameter("DateTimeReportedOnsite", typeof(System.DateTime));
    
            var dateTimeReportedResolvedParameter = dateTimeReportedResolved.HasValue ?
                new ObjectParameter("DateTimeReportedResolved", dateTimeReportedResolved) :
                new ObjectParameter("DateTimeReportedResolved", typeof(System.DateTime));
    
            var dateTimeReportedDepartedParameter = dateTimeReportedDeparted.HasValue ?
                new ObjectParameter("DateTimeReportedDeparted", dateTimeReportedDeparted) :
                new ObjectParameter("DateTimeReportedDeparted", typeof(System.DateTime));
    
            var dateTimeReportedReturnedParameter = dateTimeReportedReturned.HasValue ?
                new ObjectParameter("DateTimeReportedReturned", dateTimeReportedReturned) :
                new ObjectParameter("DateTimeReportedReturned", typeof(System.DateTime));
    
            var dateTimeDateTimeDownParameter = dateTimeDateTimeDown.HasValue ?
                new ObjectParameter("DateTimeDateTimeDown", dateTimeDateTimeDown) :
                new ObjectParameter("DateTimeDateTimeDown", typeof(System.DateTime));
    
            var dateTimeDispatchedParameter = dateTimeDispatched.HasValue ?
                new ObjectParameter("DateTimeDispatched", dateTimeDispatched) :
                new ObjectParameter("DateTimeDispatched", typeof(System.DateTime));
    
            var dateTimeCustomerStartParameter = dateTimeCustomerStart.HasValue ?
                new ObjectParameter("DateTimeCustomerStart", dateTimeCustomerStart) :
                new ObjectParameter("DateTimeCustomerStart", typeof(System.DateTime));
    
            var dateTimeCustomerDispatchedParameter = dateTimeCustomerDispatched.HasValue ?
                new ObjectParameter("DateTimeCustomerDispatched", dateTimeCustomerDispatched) :
                new ObjectParameter("DateTimeCustomerDispatched", typeof(System.DateTime));
    
            var totalPremiseTimeParameter = totalPremiseTime.HasValue ?
                new ObjectParameter("TotalPremiseTime", totalPremiseTime) :
                new ObjectParameter("TotalPremiseTime", typeof(int));
    
            var massServiceRequest_GuidParameter = massServiceRequest_Guid.HasValue ?
                new ObjectParameter("MassServiceRequest_Guid", massServiceRequest_Guid) :
                new ObjectParameter("MassServiceRequest_Guid", typeof(System.Guid));
    
            var pACNCodeParameter = pACNCode != null ?
                new ObjectParameter("PACNCode", pACNCode) :
                new ObjectParameter("PACNCode", typeof(string));
    
            var dateTimeRequestedNotificationParameter = dateTimeRequestedNotification.HasValue ?
                new ObjectParameter("DateTimeRequestedNotification", dateTimeRequestedNotification) :
                new ObjectParameter("DateTimeRequestedNotification", typeof(System.DateTime));
    
            var cancellationReasonParameter = cancellationReason != null ?
                new ObjectParameter("CancellationReason", cancellationReason) :
                new ObjectParameter("CancellationReason", typeof(string));
    
            var customerCommentInParameter = customerCommentIn != null ?
                new ObjectParameter("CustomerCommentIn", customerCommentIn) :
                new ObjectParameter("CustomerCommentIn", typeof(string));
    
            var customerCommentOutParameter = customerCommentOut != null ?
                new ObjectParameter("CustomerCommentOut", customerCommentOut) :
                new ObjectParameter("CustomerCommentOut", typeof(string));
    
            var customerNetworkIDParameter = customerNetworkID != null ?
                new ObjectParameter("CustomerNetworkID", customerNetworkID) :
                new ObjectParameter("CustomerNetworkID", typeof(string));
    
            var vendorNetworkIDParameter = vendorNetworkID != null ?
                new ObjectParameter("VendorNetworkID", vendorNetworkID) :
                new ObjectParameter("VendorNetworkID", typeof(string));
    
            var fileReferenceParameter = fileReference != null ?
                new ObjectParameter("FileReference", fileReference) :
                new ObjectParameter("FileReference", typeof(string));
    
            var vendorCommentInParameter = vendorCommentIn != null ?
                new ObjectParameter("VendorCommentIn", vendorCommentIn) :
                new ObjectParameter("VendorCommentIn", typeof(string));
    
            var vendorCommentOutParameter = vendorCommentOut != null ?
                new ObjectParameter("VendorCommentOut", vendorCommentOut) :
                new ObjectParameter("VendorCommentOut", typeof(string));
    
            var ownerParameter = owner != null ?
                new ObjectParameter("Owner", owner) :
                new ObjectParameter("Owner", typeof(string));
    
            var ownerSource_GuidParameter = ownerSource_Guid.HasValue ?
                new ObjectParameter("OwnerSource_Guid", ownerSource_Guid) :
                new ObjectParameter("OwnerSource_Guid", typeof(System.Guid));
    
            var flagClosedOnFirstContactParameter = flagClosedOnFirstContact.HasValue ?
                new ObjectParameter("FlagClosedOnFirstContact", flagClosedOnFirstContact) :
                new ObjectParameter("FlagClosedOnFirstContact", typeof(bool));
    
            var brinksLogNumberParameter = brinksLogNumber != null ?
                new ObjectParameter("BrinksLogNumber", brinksLogNumber) :
                new ObjectParameter("BrinksLogNumber", typeof(string));
    
            var flagNonbillableToBranchParameter = flagNonbillableToBranch.HasValue ?
                new ObjectParameter("FlagNonbillableToBranch", flagNonbillableToBranch) :
                new ObjectParameter("FlagNonbillableToBranch", typeof(bool));
    
            var flagNonbillableToCustomerParameter = flagNonbillableToCustomer.HasValue ?
                new ObjectParameter("FlagNonbillableToCustomer", flagNonbillableToCustomer) :
                new ObjectParameter("FlagNonbillableToCustomer", typeof(bool));
    
            var flagSpecialChargesParameter = flagSpecialCharges.HasValue ?
                new ObjectParameter("FlagSpecialCharges", flagSpecialCharges) :
                new ObjectParameter("FlagSpecialCharges", typeof(bool));
    
            var chargeAmountParameter = chargeAmount.HasValue ?
                new ObjectParameter("ChargeAmount", chargeAmount) :
                new ObjectParameter("ChargeAmount", typeof(decimal));
    
            var flagRescheduleApprovedParameter = flagRescheduleApproved.HasValue ?
                new ObjectParameter("FlagRescheduleApproved", flagRescheduleApproved) :
                new ObjectParameter("FlagRescheduleApproved", typeof(bool));
    
            var flagDisableParameter = flagDisable.HasValue ?
                new ObjectParameter("FlagDisable", flagDisable) :
                new ObjectParameter("FlagDisable", typeof(bool));
    
            var userCreatedParameter = userCreated != null ?
                new ObjectParameter("UserCreated", userCreated) :
                new ObjectParameter("UserCreated", typeof(string));
    
            var datetimeCreatedParameter = datetimeCreated.HasValue ?
                new ObjectParameter("DatetimeCreated", datetimeCreated) :
                new ObjectParameter("DatetimeCreated", typeof(System.DateTimeOffset));
    
            var universalDatetimeCreatedParameter = universalDatetimeCreated.HasValue ?
                new ObjectParameter("UniversalDatetimeCreated", universalDatetimeCreated) :
                new ObjectParameter("UniversalDatetimeCreated", typeof(System.DateTimeOffset));
    
            var userModifiedParameter = userModified != null ?
                new ObjectParameter("UserModified", userModified) :
                new ObjectParameter("UserModified", typeof(string));
    
            var datetimeModifiedParameter = datetimeModified.HasValue ?
                new ObjectParameter("DatetimeModified", datetimeModified) :
                new ObjectParameter("DatetimeModified", typeof(System.DateTimeOffset));
    
            var universalDatetimeModifiedParameter = universalDatetimeModified.HasValue ?
                new ObjectParameter("UniversalDatetimeModified", universalDatetimeModified) :
                new ObjectParameter("UniversalDatetimeModified", typeof(System.DateTimeOffset));
    
            var timeZoneLocal_GuidParameter = timeZoneLocal_Guid.HasValue ?
                new ObjectParameter("TimeZoneLocal_Guid", timeZoneLocal_Guid) :
                new ObjectParameter("TimeZoneLocal_Guid", typeof(System.Guid));
    
            var timeZoneMachine_GuidParameter = timeZoneMachine_Guid.HasValue ?
                new ObjectParameter("TimeZoneMachine_Guid", timeZoneMachine_Guid) :
                new ObjectParameter("TimeZoneMachine_Guid", typeof(System.Guid));
    
            var brinksNoteParameter = brinksNote != null ?
                new ObjectParameter("BrinksNote", brinksNote) :
                new ObjectParameter("BrinksNote", typeof(string));
    
            var reasonNameParameter = reasonName != null ?
                new ObjectParameter("ReasonName", reasonName) :
                new ObjectParameter("ReasonName", typeof(string));
    
            var dateTimeDueDateParameter = dateTimeDueDate.HasValue ?
                new ObjectParameter("DateTimeDueDate", dateTimeDueDate) :
                new ObjectParameter("DateTimeDueDate", typeof(System.DateTimeOffset));
    
            var dateTimeServiceDateParameter = dateTimeServiceDate.HasValue ?
                new ObjectParameter("DateTimeServiceDate", dateTimeServiceDate) :
                new ObjectParameter("DateTimeServiceDate", typeof(System.DateTimeOffset));
    
            var flagStampDispatchParameter = flagStampDispatch.HasValue ?
                new ObjectParameter("FlagStampDispatch", flagStampDispatch) :
                new ObjectParameter("FlagStampDispatch", typeof(bool));
    
            var flagStampAcceptParameter = flagStampAccept.HasValue ?
                new ObjectParameter("FlagStampAccept", flagStampAccept) :
                new ObjectParameter("FlagStampAccept", typeof(bool));
    
            var flagStampArriveParameter = flagStampArrive.HasValue ?
                new ObjectParameter("FlagStampArrive", flagStampArrive) :
                new ObjectParameter("FlagStampArrive", typeof(bool));
    
            var flagStampRestoreParameter = flagStampRestore.HasValue ?
                new ObjectParameter("FlagStampRestore", flagStampRestore) :
                new ObjectParameter("FlagStampRestore", typeof(bool));
    
            var flagStampDepartParameter = flagStampDepart.HasValue ?
                new ObjectParameter("FlagStampDepart", flagStampDepart) :
                new ObjectParameter("FlagStampDepart", typeof(bool));
    
            var flagStampReturnParameter = flagStampReturn.HasValue ?
                new ObjectParameter("FlagStampReturn", flagStampReturn) :
                new ObjectParameter("FlagStampReturn", typeof(bool));
    
            var cancelReasonParameter = cancelReason != null ?
                new ObjectParameter("CancelReason", cancelReason) :
                new ObjectParameter("CancelReason", typeof(string));
    
            var responderNameParameter = responderName != null ?
                new ObjectParameter("ResponderName", responderName) :
                new ObjectParameter("ResponderName", typeof(string));
    
            var previousTicketStatus_GuidParameter = previousTicketStatus_Guid.HasValue ?
                new ObjectParameter("PreviousTicketStatus_Guid", previousTicketStatus_Guid) :
                new ObjectParameter("PreviousTicketStatus_Guid", typeof(System.Guid));
    
            var flagTechMeetSecurityRequiredParameter = flagTechMeetSecurityRequired.HasValue ?
                new ObjectParameter("flagTechMeetSecurityRequired", flagTechMeetSecurityRequired) :
                new ObjectParameter("flagTechMeetSecurityRequired", typeof(bool));
    
            var reportedDescriptionParameter = reportedDescription != null ?
                new ObjectParameter("ReportedDescription", reportedDescription) :
                new ObjectParameter("ReportedDescription", typeof(string));
    
            var parentTicketGuidParameter = parentTicketGuid.HasValue ?
                new ObjectParameter("ParentTicketGuid", parentTicketGuid) :
                new ObjectParameter("ParentTicketGuid", typeof(System.Guid));
    
            var operationCodeParameter = operationCode != null ?
                new ObjectParameter("OperationCode", operationCode) :
                new ObjectParameter("OperationCode", typeof(string));
    
            var masterDailyRunResource_GuidParameter = masterDailyRunResource_Guid.HasValue ?
                new ObjectParameter("MasterDailyRunResource_Guid", masterDailyRunResource_Guid) :
                new ObjectParameter("MasterDailyRunResource_Guid", typeof(System.Guid));
    
            var responderStatusParameter = responderStatus != null ?
                new ObjectParameter("ResponderStatus", responderStatus) :
                new ObjectParameter("ResponderStatus", typeof(string));
    
            var flagStampReportedOnsiteParameter = flagStampReportedOnsite.HasValue ?
                new ObjectParameter("FlagStampReportedOnsite", flagStampReportedOnsite) :
                new ObjectParameter("FlagStampReportedOnsite", typeof(bool));
    
            var flagStampETAParameter = flagStampETA.HasValue ?
                new ObjectParameter("FlagStampETA", flagStampETA) :
                new ObjectParameter("FlagStampETA", typeof(bool));
    
            var lockHourParameter = lockHour.HasValue ?
                new ObjectParameter("LockHour", lockHour) :
                new ObjectParameter("LockHour", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var timeBlockParameter = timeBlock.HasValue ?
                new ObjectParameter("TimeBlock", timeBlock) :
                new ObjectParameter("TimeBlock", typeof(int));
    
            var rescheduleReasonParameter = rescheduleReason != null ?
                new ObjectParameter("RescheduleReason", rescheduleReason) :
                new ObjectParameter("RescheduleReason", typeof(string));
    
            var flagCloseOTCParameter = flagCloseOTC.HasValue ?
                new ObjectParameter("FlagCloseOTC", flagCloseOTC) :
                new ObjectParameter("FlagCloseOTC", typeof(bool));
    
            var responderEmailParameter = responderEmail != null ?
                new ObjectParameter("ResponderEmail", responderEmail) :
                new ObjectParameter("ResponderEmail", typeof(string));
    
            var responderShiftParameter = responderShift != null ?
                new ObjectParameter("ResponderShift", responderShift) :
                new ObjectParameter("ResponderShift", typeof(string));
    
            var flagATMParameter = flagATM.HasValue ?
                new ObjectParameter("FlagATM", flagATM) :
                new ObjectParameter("FlagATM", typeof(bool));
    
            var flagFLMParameter = flagFLM.HasValue ?
                new ObjectParameter("FlagFLM", flagFLM) :
                new ObjectParameter("FlagFLM", typeof(bool));
    
            var flagCompuSafeParameter = flagCompuSafe.HasValue ?
                new ObjectParameter("FlagCompuSafe", flagCompuSafe) :
                new ObjectParameter("FlagCompuSafe", typeof(bool));
    
            var massRequestIDParameter = massRequestID != null ?
                new ObjectParameter("MassRequestID", massRequestID) :
                new ObjectParameter("MassRequestID", typeof(string));
    
            var flagEcashParameter = flagEcash.HasValue ?
                new ObjectParameter("FlagEcash", flagEcash) :
                new ObjectParameter("FlagEcash", typeof(bool));
    
            var previousServiceRequestState_GuidParameter = previousServiceRequestState_Guid.HasValue ?
                new ObjectParameter("PreviousServiceRequestState_Guid", previousServiceRequestState_Guid) :
                new ObjectParameter("PreviousServiceRequestState_Guid", typeof(System.Guid));
    
            var envBranchTypeIdParameter = envBranchTypeId.HasValue ?
                new ObjectParameter("EnvBranchTypeId", envBranchTypeId) :
                new ObjectParameter("EnvBranchTypeId", typeof(int));
    
            var flagBranchVendorParameter = flagBranchVendor.HasValue ?
                new ObjectParameter("FlagBranchVendor", flagBranchVendor) :
                new ObjectParameter("FlagBranchVendor", typeof(bool));
    
            var sFOMasterMachineServiceType_GuidParameter = sFOMasterMachineServiceType_Guid.HasValue ?
                new ObjectParameter("SFOMasterMachineServiceType_Guid", sFOMasterMachineServiceType_Guid) :
                new ObjectParameter("SFOMasterMachineServiceType_Guid", typeof(System.Guid));
    
            var flagOnHoldParameter = flagOnHold.HasValue ?
                new ObjectParameter("FlagOnHold", flagOnHold) :
                new ObjectParameter("FlagOnHold", typeof(bool));
    
            var flagNonChargeParameter = flagNonCharge.HasValue ?
                new ObjectParameter("FlagNonCharge", flagNonCharge) :
                new ObjectParameter("FlagNonCharge", typeof(bool));
    
            var flagAllowRequestSLMParameter = flagAllowRequestSLM.HasValue ?
                new ObjectParameter("FlagAllowRequestSLM", flagAllowRequestSLM) :
                new ObjectParameter("FlagAllowRequestSLM", typeof(bool));
    
            var dateTimeTechmeetParameter = dateTimeTechmeet.HasValue ?
                new ObjectParameter("DateTimeTechmeet", dateTimeTechmeet) :
                new ObjectParameter("DateTimeTechmeet", typeof(System.DateTimeOffset));
    
            var sFOSystemCloseType_IDParameter = sFOSystemCloseType_ID.HasValue ?
                new ObjectParameter("SFOSystemCloseType_ID", sFOSystemCloseType_ID) :
                new ObjectParameter("SFOSystemCloseType_ID", typeof(int));
    
            var dateTimeTechnicianArrivedParameter = dateTimeTechnicianArrived.HasValue ?
                new ObjectParameter("DateTimeTechnicianArrived", dateTimeTechnicianArrived) :
                new ObjectParameter("DateTimeTechnicianArrived", typeof(System.DateTimeOffset));
    
            var dateTimeTechnicianNotArriveParameter = dateTimeTechnicianNotArrive.HasValue ?
                new ObjectParameter("DateTimeTechnicianNotArrive", dateTimeTechnicianNotArrive) :
                new ObjectParameter("DateTimeTechnicianNotArrive", typeof(System.DateTimeOffset));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Up_OceanOnlineMVC_SFO_ServiceRequest_Get", guidParameter, dateStatusParameter, masterSite_GuidParameter, masterActualJobHeader_GuidParameter, masterCustomerLocation_GuidParameter, sFOMasterCategory_GuidParameter, sFOMasterServiceRequestType_GuidParameter, sFOMasterPriority_GuidParameter, sFOMasterSource_OpenSource_GuidParameter, sFOMasterSource_CloseSource_GuidParameter, sFOMasterReason_GuidParameter, ticketNumberParameter, ticketStatus_GuidParameter, requestedServiceDateParameter, dateTimeOpenedParameter, dateTimeClosedParameter, contactNameParameter, contactPhoneParameter, customerReferenceNumberParameter, responderReferenceNumberParameter, escalationTypeParameter, escalationLevelParameter, escalationTimeParameter, dateTimeNotifiedParameter, reportedServiceRequestDescriptionParameter, eCashDenominationParameter, eCashAmountParameter, eCashCurrencyParameter, techMeetNameParameter, techMeetPhoneParameter, techMeetCompanyNameParameter, techMeetReasonIDParameter, techMeetSecurityRequiredParameter, createdByParameter, flagRescheduleRequestParameter, reason_GuidParameter, resolvedByParameter, vendorSolutionIDParameter, flagBillableIndicatorParameter, calculatedDueDateTimeParameter, flagNotifyNowParameter, technicianParameter, dateTimeAcknowledgedParameter, dateTimeETAParameter, dateTimeDepartureToOnsiteParameter, dateTimeReportedOnsiteParameter, dateTimeReportedResolvedParameter, dateTimeReportedDepartedParameter, dateTimeReportedReturnedParameter, dateTimeDateTimeDownParameter, dateTimeDispatchedParameter, dateTimeCustomerStartParameter, dateTimeCustomerDispatchedParameter, totalPremiseTimeParameter, massServiceRequest_GuidParameter, pACNCodeParameter, dateTimeRequestedNotificationParameter, cancellationReasonParameter, customerCommentInParameter, customerCommentOutParameter, customerNetworkIDParameter, vendorNetworkIDParameter, fileReferenceParameter, vendorCommentInParameter, vendorCommentOutParameter, ownerParameter, ownerSource_GuidParameter, flagClosedOnFirstContactParameter, brinksLogNumberParameter, flagNonbillableToBranchParameter, flagNonbillableToCustomerParameter, flagSpecialChargesParameter, chargeAmountParameter, flagRescheduleApprovedParameter, flagDisableParameter, userCreatedParameter, datetimeCreatedParameter, universalDatetimeCreatedParameter, userModifiedParameter, datetimeModifiedParameter, universalDatetimeModifiedParameter, timeZoneLocal_GuidParameter, timeZoneMachine_GuidParameter, brinksNoteParameter, reasonNameParameter, dateTimeDueDateParameter, dateTimeServiceDateParameter, flagStampDispatchParameter, flagStampAcceptParameter, flagStampArriveParameter, flagStampRestoreParameter, flagStampDepartParameter, flagStampReturnParameter, cancelReasonParameter, responderNameParameter, previousTicketStatus_GuidParameter, flagTechMeetSecurityRequiredParameter, reportedDescriptionParameter, parentTicketGuidParameter, operationCodeParameter, masterDailyRunResource_GuidParameter, responderStatusParameter, flagStampReportedOnsiteParameter, flagStampETAParameter, lockHourParameter, dateParameter, timeBlockParameter, rescheduleReasonParameter, flagCloseOTCParameter, responderEmailParameter, responderShiftParameter, flagATMParameter, flagFLMParameter, flagCompuSafeParameter, massRequestIDParameter, flagEcashParameter, previousServiceRequestState_GuidParameter, envBranchTypeIdParameter, flagBranchVendorParameter, sFOMasterMachineServiceType_GuidParameter, flagOnHoldParameter, flagNonChargeParameter, flagAllowRequestSLMParameter, dateTimeTechmeetParameter, sFOSystemCloseType_IDParameter, dateTimeTechnicianArrivedParameter, dateTimeTechnicianNotArriveParameter);
        }
    
        public virtual ObjectResult<CountryByUserResult> Up_OceanOnlineMVC_StandardTable_CountryByUser_Get(string strUserName)
        {
            var strUserNameParameter = strUserName != null ?
                new ObjectParameter("strUserName", strUserName) :
                new ObjectParameter("strUserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CountryByUserResult>("Up_OceanOnlineMVC_StandardTable_CountryByUser_Get", strUserNameParameter);
        }
    
        public virtual ObjectResult<string> Up_OceanOnlineMVC_SystemSaltEncryption_Get(string strPassWord, Nullable<System.Guid> saltKeyGuid)
        {
            var strPassWordParameter = strPassWord != null ?
                new ObjectParameter("StrPassWord", strPassWord) :
                new ObjectParameter("StrPassWord", typeof(string));
    
            var saltKeyGuidParameter = saltKeyGuid.HasValue ?
                new ObjectParameter("SaltKeyGuid", saltKeyGuid) :
                new ObjectParameter("SaltKeyGuid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Up_OceanOnlineMVC_SystemSaltEncryption_Get", strPassWordParameter, saltKeyGuidParameter);
        }
    
        public virtual ObjectResult<SFOJobListByRunResult> Up_OceanOnlineMVC_SFO_JobListByRun_Get(Nullable<System.Guid> userGuid)
        {
            var userGuidParameter = userGuid.HasValue ?
                new ObjectParameter("UserGuid", userGuid) :
                new ObjectParameter("UserGuid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SFOJobListByRunResult>("Up_OceanOnlineMVC_SFO_JobListByRun_Get", userGuidParameter);
        }
    
        public virtual ObjectResult<AdhocLocationByCustomerResult> Up_OceanOnlineMVC_Adhoc_LocationByCustomer_Get(Nullable<System.Guid> customerGuid, Nullable<System.Guid> brinksiteGuid, Nullable<System.Guid> dayOfWeek_Guid, Nullable<System.Guid> jobType_Guid, Nullable<System.Guid> lineOfBusiness_Guid, Nullable<System.Guid> subServiceType_Guid, Nullable<System.DateTime> workDate, Nullable<bool> flagDestination, Nullable<System.Guid> customerLocaitonPKGuid, Nullable<System.Guid> brinksiteDEL_Guid)
        {
            var customerGuidParameter = customerGuid.HasValue ?
                new ObjectParameter("CustomerGuid", customerGuid) :
                new ObjectParameter("CustomerGuid", typeof(System.Guid));
    
            var brinksiteGuidParameter = brinksiteGuid.HasValue ?
                new ObjectParameter("BrinksiteGuid", brinksiteGuid) :
                new ObjectParameter("BrinksiteGuid", typeof(System.Guid));
    
            var dayOfWeek_GuidParameter = dayOfWeek_Guid.HasValue ?
                new ObjectParameter("DayOfWeek_Guid", dayOfWeek_Guid) :
                new ObjectParameter("DayOfWeek_Guid", typeof(System.Guid));
    
            var jobType_GuidParameter = jobType_Guid.HasValue ?
                new ObjectParameter("JobType_Guid", jobType_Guid) :
                new ObjectParameter("JobType_Guid", typeof(System.Guid));
    
            var lineOfBusiness_GuidParameter = lineOfBusiness_Guid.HasValue ?
                new ObjectParameter("LineOfBusiness_Guid", lineOfBusiness_Guid) :
                new ObjectParameter("LineOfBusiness_Guid", typeof(System.Guid));
    
            var subServiceType_GuidParameter = subServiceType_Guid.HasValue ?
                new ObjectParameter("SubServiceType_Guid", subServiceType_Guid) :
                new ObjectParameter("SubServiceType_Guid", typeof(System.Guid));
    
            var workDateParameter = workDate.HasValue ?
                new ObjectParameter("WorkDate", workDate) :
                new ObjectParameter("WorkDate", typeof(System.DateTime));
    
            var flagDestinationParameter = flagDestination.HasValue ?
                new ObjectParameter("FlagDestination", flagDestination) :
                new ObjectParameter("FlagDestination", typeof(bool));
    
            var customerLocaitonPKGuidParameter = customerLocaitonPKGuid.HasValue ?
                new ObjectParameter("CustomerLocaitonPKGuid", customerLocaitonPKGuid) :
                new ObjectParameter("CustomerLocaitonPKGuid", typeof(System.Guid));
    
            var brinksiteDEL_GuidParameter = brinksiteDEL_Guid.HasValue ?
                new ObjectParameter("BrinksiteDEL_Guid", brinksiteDEL_Guid) :
                new ObjectParameter("BrinksiteDEL_Guid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdhocLocationByCustomerResult>("Up_OceanOnlineMVC_Adhoc_LocationByCustomer_Get", customerGuidParameter, brinksiteGuidParameter, dayOfWeek_GuidParameter, jobType_GuidParameter, lineOfBusiness_GuidParameter, subServiceType_GuidParameter, workDateParameter, flagDestinationParameter, customerLocaitonPKGuidParameter, brinksiteDEL_GuidParameter);
        }
    
        public virtual ObjectResult<MasterRouteUpdateJobOrderSetResult> Up_OceanOnlineMVC_MasterRoute_UpdateJobOrder_Set(Nullable<System.Guid> masterRoute_Guid, string masterRouteGroupDetail_Guid, Nullable<bool> flagMasterRoute, Nullable<System.Guid> actionProcess, Nullable<System.Guid> category, string parameterCategoryMsg, string userModify, Nullable<System.DateTime> dateTimeModify, Nullable<System.Guid> masterRouteEnableGuid)
        {
            var masterRoute_GuidParameter = masterRoute_Guid.HasValue ?
                new ObjectParameter("MasterRoute_Guid", masterRoute_Guid) :
                new ObjectParameter("MasterRoute_Guid", typeof(System.Guid));
    
            var masterRouteGroupDetail_GuidParameter = masterRouteGroupDetail_Guid != null ?
                new ObjectParameter("MasterRouteGroupDetail_Guid", masterRouteGroupDetail_Guid) :
                new ObjectParameter("MasterRouteGroupDetail_Guid", typeof(string));
    
            var flagMasterRouteParameter = flagMasterRoute.HasValue ?
                new ObjectParameter("FlagMasterRoute", flagMasterRoute) :
                new ObjectParameter("FlagMasterRoute", typeof(bool));
    
            var actionProcessParameter = actionProcess.HasValue ?
                new ObjectParameter("ActionProcess", actionProcess) :
                new ObjectParameter("ActionProcess", typeof(System.Guid));
    
            var categoryParameter = category.HasValue ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(System.Guid));
    
            var parameterCategoryMsgParameter = parameterCategoryMsg != null ?
                new ObjectParameter("ParameterCategoryMsg", parameterCategoryMsg) :
                new ObjectParameter("ParameterCategoryMsg", typeof(string));
    
            var userModifyParameter = userModify != null ?
                new ObjectParameter("UserModify", userModify) :
                new ObjectParameter("UserModify", typeof(string));
    
            var dateTimeModifyParameter = dateTimeModify.HasValue ?
                new ObjectParameter("DateTimeModify", dateTimeModify) :
                new ObjectParameter("DateTimeModify", typeof(System.DateTime));
    
            var masterRouteEnableGuidParameter = masterRouteEnableGuid.HasValue ?
                new ObjectParameter("MasterRouteEnableGuid", masterRouteEnableGuid) :
                new ObjectParameter("MasterRouteEnableGuid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MasterRouteUpdateJobOrderSetResult>("Up_OceanOnlineMVC_MasterRoute_UpdateJobOrder_Set", masterRoute_GuidParameter, masterRouteGroupDetail_GuidParameter, flagMasterRouteParameter, actionProcessParameter, categoryParameter, parameterCategoryMsgParameter, userModifyParameter, dateTimeModifyParameter, masterRouteEnableGuidParameter);
        }
    
        public virtual ObjectResult<CustomerByCompanyResult> Up_OceanOnlineMVC_CustomerByCompany_Get(Nullable<System.Guid> brinksCompany_Guid)
        {
            var brinksCompany_GuidParameter = brinksCompany_Guid.HasValue ?
                new ObjectParameter("brinksCompany_Guid", brinksCompany_Guid) :
                new ObjectParameter("brinksCompany_Guid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CustomerByCompanyResult>("Up_OceanOnlineMVC_CustomerByCompany_Get", brinksCompany_GuidParameter);
        }
    
        public virtual int Up_OceanOnlineMVC_ResetPassword_Set(string userName, string newPasword)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var newPaswordParameter = newPasword != null ?
                new ObjectParameter("NewPasword", newPasword) :
                new ObjectParameter("NewPasword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Up_OceanOnlineMVC_ResetPassword_Set", userNameParameter, newPaswordParameter);
        }
    
        public virtual ObjectResult<RunControlRunResourceDailyBySiteAndDateGetResult> Up_OceanOnlineMVC_RunControl_RunResourceDailyBySiteAndDate_Get(Nullable<System.Guid> masterSiteGuid, Nullable<System.Guid> userGuid, Nullable<System.DateTime> strWorkDate, Nullable<int> backDay)
        {
            var masterSiteGuidParameter = masterSiteGuid.HasValue ?
                new ObjectParameter("MasterSiteGuid", masterSiteGuid) :
                new ObjectParameter("MasterSiteGuid", typeof(System.Guid));
    
            var userGuidParameter = userGuid.HasValue ?
                new ObjectParameter("UserGuid", userGuid) :
                new ObjectParameter("UserGuid", typeof(System.Guid));
    
            var strWorkDateParameter = strWorkDate.HasValue ?
                new ObjectParameter("StrWorkDate", strWorkDate) :
                new ObjectParameter("StrWorkDate", typeof(System.DateTime));
    
            var backDayParameter = backDay.HasValue ?
                new ObjectParameter("BackDay", backDay) :
                new ObjectParameter("BackDay", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RunControlRunResourceDailyBySiteAndDateGetResult>("Up_OceanOnlineMVC_RunControl_RunResourceDailyBySiteAndDate_Get", masterSiteGuidParameter, userGuidParameter, strWorkDateParameter, backDayParameter);
        }
    }
}
