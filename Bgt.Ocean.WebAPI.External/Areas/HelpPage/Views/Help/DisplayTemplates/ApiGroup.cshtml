@using System.Web.Http
@using System.Web.Http.Controllers
@using System.Web.Http.Description
@using Bgt.Ocean.WebAPI.External.Areas.HelpPage
@using Bgt.Ocean.WebAPI.External.Areas.HelpPage.Models
@model IGrouping<HttpControllerDescriptor, ApiDescription>

@{
    var controllerDocumentation = ViewBag.DocumentationProvider != null ?
        ViewBag.DocumentationProvider.GetDocumentation(Model.Key) :
        null;
}

<h2 id="@Model.Key.ControllerName">@Model.Key.ControllerName</h2>
@if (!String.IsNullOrEmpty(controllerDocumentation))
{
    <p>@controllerDocumentation</p>
}
<table class="help-page-table">
    <thead>
        <tr><th>API</th><th>Description</th></tr>
    </thead>
    <tbody>
        @foreach (var api in Model)
        {
            string prefixVersion = Model.Key.ControllerName.Split('_')[0] + "_";
            api.RelativePath = api.RelativePath.Replace(prefixVersion, "");
            api.RelativePath = api.RelativePath.Replace("{access}", Model.Key.ControllerType.FullName.Contains("Internals") ? "in" : "ext");
            api.RelativePath = api.RelativePath.Replace("{version}", Model.Key.ControllerName.Split('_')[0]);
            <tr>
                <td class="api-name"><a href="@Url.Action("Api", "Help", new { apiId = api.GetFriendlyId() })">@api.HttpMethod.Method @api.RelativePath</a></td>
                <td class="api-documentation">
                    @if (api.Documentation != null)
                {
                        <p>@api.Documentation</p>
                    }
                    else
                    {
                        <p>No documentation available.</p>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>